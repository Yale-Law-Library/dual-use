{"ast":null,"code":"var _jsxFileName = \"/Users/parkerkaufmann/Code/ylj/src/LineChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { select, selectAll } from 'd3-selection';\nimport { scalePoint, scaleLinear } from 'd3-scale';\nimport { max, group } from 'd3-array';\nimport { line as d3Line, curveMonotoneX } from 'd3-shape';\nimport { transition } from 'd3-transition';\nimport { easeLinear } from 'd3-ease';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Title = styled.div`\n  color: #000;\n  text-align: center;\n  font-size: 16px;\n  font-weight: 400;\n  margin: 10px;\n`;\n_c = Title;\nconst ChartContainer = styled.div`\n  width: 570px;\n  color: #333;\n  font-family: 'Bennett Text', Georgia, serif;\n`;\n_c2 = ChartContainer;\nconst Legend = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 0.5rem;\n  margin-bottom: 1rem;\n  font-size: 12px;\n`;\n_c3 = Legend;\nconst LegendItem = styled.div`\n  display: flex;\n  align-items: center;\n\n  &::before {\n    content: '';\n    display: inline-block;\n    width: 20px;\n    height: 2px;\n    margin-right: 6px;\n    background-color: ${props => props.color || '#000'};\n  }\n`;\n_c4 = LegendItem;\nexport default function LineChart({\n  data,\n  name\n}) {\n  _s();\n  const svgRef = useRef();\n  const colorMap = {\n    \"Military Personnel, Equipment & Facilities\": \"#DFC5B2\",\n    \"Vehicles\": \"#B7BCD6\",\n    \"Transportation Infrastructure\": \"#ACBCC5\",\n    \"Residential Buildings\": \"#5088A1\",\n    \"Manufacturing, Production, and Construction\": \"#998C84\",\n    \"Oil Infrastructure\": \"#D2D9B6\",\n    \"Media and Telecom Facilities\": \"#9194A8\",\n    \"Terrain\": \"#AEAC8D\",\n    \"Water Infrastructure\": \"#8EBADB\",\n    \"Electrical Infrastructure\": \"#78A898\",\n    \"Financial and Banking Facilities\": \"#98D5D3\"\n  };\n  const sortedCategories = Array.from(new Set(data.flatMap(d => d.categories.map(c => c.name)))).sort((a, b) => {\n    const totalA = data.reduce((sum, d) => {\n      const item = d.categories.find(c => c.name === a);\n      return sum + (item ? item.count : 0);\n    }, 0);\n    const totalB = data.reduce((sum, d) => {\n      const item = d.categories.find(c => c.name === b);\n      return sum + (item ? item.count : 0);\n    }, 0);\n    return totalB - totalA;\n  });\n  const quarters = data.map(d => d.quarter);\n  const color = category => colorMap[category] || '#ccc';\n  const xScale = scalePoint().domain(quarters).range([0, 570 - 60 - 20]);\n  const yMax = max(data, d => max(d.categories, c => c.count));\n  const yScale = scaleLinear().domain([0, yMax + 200]).range([500 - 5 - 60, 0]);\n  const lineGen = d3Line().x(d => xScale(d[0])).y(d => yScale(d[1])).curve(curveMonotoneX);\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    svg.attr('width', 570).attr('height', 500);\n    svg.append('g').attr('id', 'data-paths').attr('fill', 'none').attr('stroke-width', 3).attr('stroke-linejoin', 'round').attr('stroke-linecap', 'round');\n  }, []);\n  useEffect(() => {\n    const t = transition().duration(500).ease(easeLinear);\n    const groups = group(sortedCategories.flatMap(category => [data.map(d => {\n      const entry = d.categories.find(c => c.name === category);\n      return [d.quarter, entry ? entry.count : 0, category];\n    })]), d => d[0][2]);\n    selectAll('#data-paths').selectAll('path').data(groups.values()).join('path').attr('stroke', d => color(d[0][2])).attr('stroke-width', '1.5px').transition(t).attr('d', lineGen);\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(ChartContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: [\"Targets, By Total Number in Press Releases per Quarter in\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: '#156082',\n          fontWeight: 600\n        },\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Legend, {\n      children: sortedCategories.map(name => /*#__PURE__*/_jsxDEV(LegendItem, {\n        color: colorMap[name] || '#ccc',\n        children: name\n      }, name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n_s(LineChart, \"xZvsc6Dl8WHAXhRrVyhrxei3QC0=\");\n_c5 = LineChart;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Title\");\n$RefreshReg$(_c2, \"ChartContainer\");\n$RefreshReg$(_c3, \"Legend\");\n$RefreshReg$(_c4, \"LegendItem\");\n$RefreshReg$(_c5, \"LineChart\");","map":{"version":3,"names":["React","useEffect","useRef","select","selectAll","scalePoint","scaleLinear","max","group","line","d3Line","curveMonotoneX","transition","easeLinear","styled","jsxDEV","_jsxDEV","Title","div","_c","ChartContainer","_c2","Legend","_c3","LegendItem","props","color","_c4","LineChart","data","name","_s","svgRef","colorMap","sortedCategories","Array","from","Set","flatMap","d","categories","map","c","sort","a","b","totalA","reduce","sum","item","find","count","totalB","quarters","quarter","category","xScale","domain","range","yMax","yScale","lineGen","x","y","curve","svg","current","attr","append","t","duration","ease","groups","entry","values","join","children","style","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c5","$RefreshReg$"],"sources":["/Users/parkerkaufmann/Code/ylj/src/LineChart.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { select, selectAll } from 'd3-selection';\nimport { scalePoint, scaleLinear } from 'd3-scale';\nimport { max, group } from 'd3-array';\nimport { line as d3Line, curveMonotoneX } from 'd3-shape';\nimport { transition } from 'd3-transition';\nimport { easeLinear } from 'd3-ease';\nimport styled from 'styled-components';\n\nconst Title = styled.div`\n  color: #000;\n  text-align: center;\n  font-size: 16px;\n  font-weight: 400;\n  margin: 10px;\n`;\n\nconst ChartContainer = styled.div`\n  width: 570px;\n  color: #333;\n  font-family: 'Bennett Text', Georgia, serif;\n`;\n\nconst Legend = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 0.5rem;\n  margin-bottom: 1rem;\n  font-size: 12px;\n`;\n\nconst LegendItem = styled.div`\n  display: flex;\n  align-items: center;\n\n  &::before {\n    content: '';\n    display: inline-block;\n    width: 20px;\n    height: 2px;\n    margin-right: 6px;\n    background-color: ${(props) => props.color || '#000'};\n  }\n`;\n\nexport default function LineChart({ data, name }) {\n  const svgRef = useRef();\n\n  const colorMap = {\n    \"Military Personnel, Equipment & Facilities\": \"#DFC5B2\",\n    \"Vehicles\": \"#B7BCD6\",\n    \"Transportation Infrastructure\": \"#ACBCC5\",\n    \"Residential Buildings\": \"#5088A1\",\n    \"Manufacturing, Production, and Construction\": \"#998C84\",\n    \"Oil Infrastructure\": \"#D2D9B6\",\n    \"Media and Telecom Facilities\": \"#9194A8\",\n    \"Terrain\": \"#AEAC8D\",\n    \"Water Infrastructure\": \"#8EBADB\",\n    \"Electrical Infrastructure\": \"#78A898\",\n    \"Financial and Banking Facilities\": \"#98D5D3\"\n  };\n\n  const sortedCategories = Array.from(\n    new Set(data.flatMap((d) => d.categories.map((c) => c.name)))\n  ).sort((a, b) => {\n    const totalA = data.reduce((sum, d) => {\n      const item = d.categories.find((c) => c.name === a);\n      return sum + (item ? item.count : 0);\n    }, 0);\n    const totalB = data.reduce((sum, d) => {\n      const item = d.categories.find((c) => c.name === b);\n      return sum + (item ? item.count : 0);\n    }, 0);\n    return totalB - totalA;\n  });\n\n  const quarters = data.map((d) => d.quarter);\n\n  const color = (category) => colorMap[category] || '#ccc';\n\n  const xScale = scalePoint().domain(quarters).range([0, 570 - 60 - 20]);\n  const yMax = max(data, (d) => max(d.categories, (c) => c.count));\n  const yScale = scaleLinear().domain([0, yMax + 200]).range([500 - 5 - 60, 0]);\n\n  const lineGen = d3Line()\n    .x((d) => xScale(d[0]))\n    .y((d) => yScale(d[1]))\n    .curve(curveMonotoneX);\n\n  useEffect(() => {\n    const svg = select(svgRef.current);\n\n    svg.attr('width', 570).attr('height', 500);\n\n    svg\n      .append('g')\n      .attr('id', 'data-paths')\n      .attr('fill', 'none')\n      .attr('stroke-width', 3)\n      .attr('stroke-linejoin', 'round')\n      .attr('stroke-linecap', 'round');\n  }, []);\n\n  useEffect(() => {\n    const t = transition().duration(500).ease(easeLinear);\n\n    const groups = group(\n      sortedCategories.flatMap((category) => [\n        data.map((d) => {\n          const entry = d.categories.find((c) => c.name === category);\n          return [d.quarter, entry ? entry.count : 0, category];\n        }),\n      ]),\n      (d) => d[0][2]\n    );\n\n    selectAll('#data-paths')\n      .selectAll('path')\n      .data(groups.values())\n      .join('path')\n      .attr('stroke', (d) => color(d[0][2]))\n      .attr('stroke-width', '1.5px')\n      .transition(t)\n      .attr('d', lineGen);\n  }, [data]);\n\n  return (\n    <ChartContainer>\n      <Title>\n        Targets, By Total Number in Press Releases per Quarter in{' '}\n        <span style={{ color: '#156082', fontWeight: 600 }}>{name}</span>\n      </Title>\n      <Legend>\n        {sortedCategories.map((name) => (\n          <LegendItem key={name} color={colorMap[name] || '#ccc'}>\n            {name}\n          </LegendItem>\n        ))}\n      </Legend>\n      <svg ref={svgRef}></svg>\n    </ChartContainer>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}