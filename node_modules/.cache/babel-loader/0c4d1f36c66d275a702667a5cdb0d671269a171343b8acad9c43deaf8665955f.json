{"ast":null,"code":"import{max as d3max,min as d3min}from\"d3-array\";import{select}from\"d3-selection\";import React,{useEffect,useRef}from\"react\";import styled from\"styled-components\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const LegendWrapper=styled.div`\n  display: flex;\n  align-items: center;\n  font-family: 'Bennett Text', Georgia, serif;\n  gap: .25rem;\n`;const LegendText=styled.div`\n  font-size: 12px;\n  color: #2a4b5c;\n  max-width: 109px;\n  text-align:left;\n`;const Svg=styled.svg`\n  overflow: visible;\n`;export default function CircleLegend(_ref){let{data,sizeScale}=_ref;const ref=useRef();useEffect(()=>{const svg=select(ref.current);svg.selectAll(\"*\").remove();const allCounts=data.flatMap(d=>d.categories.map(c=>c.count));const min=d3min(allCounts)+1;const max=d3max(allCounts);const mid=Math.round((min+max)/2);const values=[1,150,300];const spacing=2;const circleX=50;const labelX=circleX;const lastY=80;const circles=values.slice().sort((a,b)=>sizeScale(b)-sizeScale(a));circles.forEach((val,i)=>{const r=sizeScale(val)/2;console.log(r);const cy=lastY-r;svg.append(\"circle\").attr(\"cx\",circleX).attr(\"cy\",cy).attr(\"r\",r).attr(\"fill\",\"#abc2d1\").attr(\"fill-opacity\",0.4).attr(\"stroke\",\"#abc2d1\");svg.append(\"text\").attr(\"x\",labelX).attr(\"y\",cy-(3-i)*12).attr(\"dy\",\"0.35em\").attr(\"text-anchor\",\"middle\").text(val).style(\"font-size\",\"12px\").style(\"fill\",\"#2a4b5c\").style(\"font-weight\",\"600\");});},[sizeScale]);return/*#__PURE__*/_jsxs(LegendWrapper,{children:[/*#__PURE__*/_jsxs(LegendText,{children:[/*#__PURE__*/_jsx(\"div\",{style:{fontWeight:600,fontSize:\"12px\"},children:\"TARGETS\"}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:\"12px\",color:\"#444\"},children:\"The larger the circle, the more targets.\"})]}),/*#__PURE__*/_jsx(Svg,{ref:ref,width:100,height:100})]});}","map":{"version":3,"names":["max","d3max","min","d3min","select","React","useEffect","useRef","styled","jsx","_jsx","jsxs","_jsxs","LegendWrapper","div","LegendText","Svg","svg","CircleLegend","_ref","data","sizeScale","ref","current","selectAll","remove","allCounts","flatMap","d","categories","map","c","count","mid","Math","round","values","spacing","circleX","labelX","lastY","circles","slice","sort","a","b","forEach","val","i","r","console","log","cy","append","attr","text","style","children","fontWeight","fontSize","color","width","height"],"sources":["/Users/parkerkaufmann/Code/dual-use/src/CircleLegend.jsx"],"sourcesContent":["import { max as d3max, min as d3min } from \"d3-array\";\nimport { select } from \"d3-selection\";\nimport React, { useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\n\nconst LegendWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  font-family: 'Bennett Text', Georgia, serif;\n  gap: .25rem;\n`;\n\nconst LegendText = styled.div`\n  font-size: 12px;\n  color: #2a4b5c;\n  max-width: 109px;\n  text-align:left;\n`;\n\nconst Svg = styled.svg`\n  overflow: visible;\n`;\n\nexport default function CircleLegend({ data, sizeScale }) {\n  const ref = useRef();\n\n  useEffect(() => {\n    const svg = select(ref.current);\n    svg.selectAll(\"*\").remove();\n\n    const allCounts = data.flatMap(d => d.categories.map(c => c.count));\n    const min = d3min(allCounts) + 1;\n    const max = d3max(allCounts);\n    const mid = Math.round((min + max) / 2);\n\n    const values = [1, 150, 300];\n    const spacing = 2;\n    const circleX = 50;\n    const labelX = circleX;\n    const lastY = 80;\n\n    const circles = values\n      .slice()\n      .sort((a, b) => sizeScale(b) - sizeScale(a));\n\n    circles.forEach((val, i) => {\n      const r = sizeScale(val) / 2;\n      console.log(r);\n      const cy = lastY - r;\n\n      svg\n        .append(\"circle\")\n        .attr(\"cx\", circleX)\n        .attr(\"cy\", cy)\n        .attr(\"r\", r)\n        .attr(\"fill\", \"#abc2d1\")\n        .attr(\"fill-opacity\", 0.4)\n        .attr(\"stroke\", \"#abc2d1\");\n\n      svg\n        .append(\"text\")\n        .attr(\"x\", labelX)\n        .attr(\"y\", cy - (3 - i) * 12)\n        .attr(\"dy\", \"0.35em\")\n        .attr(\"text-anchor\", \"middle\")\n        .text(val)\n        .style(\"font-size\", \"12px\")\n        .style(\"fill\", \"#2a4b5c\")\n        .style(\"font-weight\", \"600\");\n    });\n  }, [sizeScale]);\n\n  return (\n    <LegendWrapper>\n      <LegendText>\n        <div style={{ fontWeight: 600, fontSize: \"12px\" }}>TARGETS</div>\n        <div style={{ fontSize: \"12px\", color: \"#444\" }}>\n          The larger the circle, the more targets.\n        </div>\n      </LegendText>\n      <Svg ref={ref} width={100} height={100} />\n    </LegendWrapper>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}