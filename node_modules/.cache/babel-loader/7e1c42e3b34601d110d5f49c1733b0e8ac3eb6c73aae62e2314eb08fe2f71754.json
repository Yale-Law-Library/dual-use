{"ast":null,"code":"import React from'react';import styled from'styled-components';import{scaleLinear}from'd3-scale';import CircleLegend from'./CircleLegend';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const GridWrapper=styled.div`\n  padding: 2rem 2rem 2rem 1.5rem;\n  font-family: 'Bennett Text', Georgia, serif;\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n  width:550px;\n`;const CategoryRow=styled.div`\n  display: flex;\n  flex-direction: column;\n`;const CategoryLabel=styled.div`\n  font-size: 16px;\n  font-weight: 500;\n  padding-bottom: ${_ref=>{let{offset}=_ref;return offset+12;}}px;\n  text-align: start;\n`;const QuarterRow=styled.div`\n  display: flex;\n  align-items: flex-end;\n`;const CircleContainer=styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 40px;\n`;const QuarterLabel=styled.div`\n  font-size: 12px;\n  text-align: center;\n  padding-bottom: ${_ref2=>{let{offset}=_ref2;return offset+6;}}px;\n     transition: padding-bottom 1s ease-in-out\n`;const CountLabel=styled.div`\n  font-size: 12px;\n  margin-top: ${_ref3=>{let{offset}=_ref3;return offset+6;}}px;\n  color: ${_ref4=>{let{color}=_ref4;return color;}};\n  font-weight: 600;\n  transition: margin-top 1s ease-in-out;\n  filter: brightness(.5);\n`;const CircleStack=styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;const BlurredCircle=styled.div`\n  position: absolute;\n  border-radius: 50%;\n  background-color: ${_ref5=>{let{color}=_ref5;return color;}};\n  opacity: 0.7;\n  filter: blur(3px);\n  width: ${_ref6=>{let{size}=_ref6;return size;}}px;\n  height: ${_ref7=>{let{size}=_ref7;return size;}}px;\n  transition: height 1s ease-in, width 1s ease-in-out\n`;const OutlineCircle=styled.div`\n  position: absolute;\n  border-radius: 50%;\n  border: 1px solid ${_ref8=>{let{color}=_ref8;return color;}};\n  opacity: 0.7;\n  width: ${_ref9=>{let{size}=_ref9;return size;}}px;\n  height: ${_ref10=>{let{size}=_ref10;return size;}}px;\n  transition: height 1s ease-in, width 1s ease-in-out\n`;const CenterDot=styled.div`\n  position: absolute;\n  width: 6px;\n  height: 6px;\n  background-color: ${_ref11=>{let{color}=_ref11;return color;}};\n  border-radius: 50%;\n  filter: brightness(.85);\n`;const LegendGroup=styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: end;\n`;const colorMap={\"Military Personnel, Equipment & Facilities\":\"#DFC5B2\",\"Vehicles\":\"#B7BCD6\",\"Transportation Infrastructure\":\"#ACBCC5\",\"Residential Buildings\":\"#5088A1\",\"Manufacturing, Production, and Construction\":\"#998C84\",\"Oil Infrastructure\":\"#D2D9B6\",\"Media and Telecom Facilities\":\"#9194A8\",\"Terrain\":\"#AEAC8D\",\"Water Infrastructure\":\"#8EBADB\",\"Electrical Infrastructure\":\"#78A898\",\"Financial and Banking Facilities\":\"#98D5D3\"};export default function CategoryBubbleChart(props){const{data,sizeScale,hoveredQuarter,setHoveredQuarter,hoverCategories}=props;const categories=Array.from(new Set(data.flatMap(d=>d.categories.map(c=>c.name)))).sort((a,b)=>{const totalA=data.reduce((sum,d)=>{const item=d.categories.find(c=>c.name===a);return sum+(item?item.count:0);},0);const totalB=data.reduce((sum,d)=>{const item=d.categories.find(c=>c.name===b);return sum+(item?item.count:0);},0);return totalB-totalA;});const maxRadiiByCategory={};categories.forEach(cat=>{const maxCount=Math.max(...data.map(d=>{const found=d.categories.find(c=>c.name===cat);return found?found.count:0;}));maxRadiiByCategory[cat]=sizeScale(maxCount);});return/*#__PURE__*/_jsx(GridWrapper,{children:categories.filter(c=>hoverCategories.length===0||hoverCategories.includes(c)).map((category,i)=>{const maxCategorySize=Math.max(...data.map(d=>{const found=d.categories.find(c=>c.name===category);return found?sizeScale(found.count):0;}));return/*#__PURE__*/_jsxs(CategoryRow,{children:[i===0&&/*#__PURE__*/_jsxs(LegendGroup,{children:[/*#__PURE__*/_jsx(CategoryLabel,{offset:0,children:category}),/*#__PURE__*/_jsx(CircleLegend,{data:data,sizeScale:sizeScale})]}),i!==0&&/*#__PURE__*/_jsx(CategoryLabel,{offset:0,children:category}),/*#__PURE__*/_jsx(QuarterRow,{children:data.map(d=>{const found=d.categories.find(c=>c.name===category);const count=found?found.count:0;const size=sizeScale(count);const label=d.quarter.split(\" \");const color=colorMap[category]||'#ccc';return/*#__PURE__*/_jsxs(CircleContainer,{style:{opacity:hoveredQuarter===\"\"||hoveredQuarter===d.quarter?1:.3},onMouseMove:()=>setHoveredQuarter(d.quarter),onMouseLeave:()=>setHoveredQuarter(\"\"),children:[/*#__PURE__*/_jsx(QuarterLabel,{offset:-5,children:label[0]}),/*#__PURE__*/_jsx(QuarterLabel,{offset:maxRadiiByCategory[category]/2,children:label[1]}),/*#__PURE__*/_jsxs(CircleStack,{children:[/*#__PURE__*/_jsx(BlurredCircle,{size:size,color:color}),/*#__PURE__*/_jsx(OutlineCircle,{size:size,color:color}),/*#__PURE__*/_jsx(CenterDot,{color:color})]}),/*#__PURE__*/_jsx(CountLabel,{color:color,offset:maxRadiiByCategory[category]/2,children:count})]},`${category}-${d.quarter}`);})})]},category);})});}","map":{"version":3,"names":["React","styled","scaleLinear","CircleLegend","jsx","_jsx","jsxs","_jsxs","GridWrapper","div","CategoryRow","CategoryLabel","_ref","offset","QuarterRow","CircleContainer","QuarterLabel","_ref2","CountLabel","_ref3","_ref4","color","CircleStack","BlurredCircle","_ref5","_ref6","size","_ref7","OutlineCircle","_ref8","_ref9","_ref10","CenterDot","_ref11","LegendGroup","colorMap","CategoryBubbleChart","props","data","sizeScale","hoveredQuarter","setHoveredQuarter","hoverCategories","categories","Array","from","Set","flatMap","d","map","c","name","sort","a","b","totalA","reduce","sum","item","find","count","totalB","maxRadiiByCategory","forEach","cat","maxCount","Math","max","found","children","filter","length","includes","category","i","maxCategorySize","label","quarter","split","style","opacity","onMouseMove","onMouseLeave"],"sources":["/Users/parkerkaufmann/Code/dual-use/src/CategoryBubbleChart.jsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { scaleLinear } from 'd3-scale';\nimport CircleLegend from './CircleLegend';\n\nconst GridWrapper = styled.div`\n  padding: 2rem 2rem 2rem 1.5rem;\n  font-family: 'Bennett Text', Georgia, serif;\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n  width:550px;\n`;\n\nconst CategoryRow = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst CategoryLabel = styled.div`\n  font-size: 16px;\n  font-weight: 500;\n  padding-bottom: ${({ offset }) => offset + 12}px;\n  text-align: start;\n`;\n\nconst QuarterRow = styled.div`\n  display: flex;\n  align-items: flex-end;\n`;\n\nconst CircleContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 40px;\n`;\n\nconst QuarterLabel = styled.div`\n  font-size: 12px;\n  text-align: center;\n  padding-bottom: ${({ offset }) => offset + 6}px;\n     transition: padding-bottom 1s ease-in-out\n`;\n\nconst CountLabel = styled.div`\n  font-size: 12px;\n  margin-top: ${({ offset }) => offset + 6}px;\n  color: ${({ color }) => color};\n  font-weight: 600;\n  transition: margin-top 1s ease-in-out;\n  filter: brightness(.5);\n`;\n\n\nconst CircleStack = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst BlurredCircle = styled.div`\n  position: absolute;\n  border-radius: 50%;\n  background-color: ${({ color }) => color};\n  opacity: 0.7;\n  filter: blur(3px);\n  width: ${({ size }) => size}px;\n  height: ${({ size }) => size}px;\n  transition: height 1s ease-in, width 1s ease-in-out\n`;\n\nconst OutlineCircle = styled.div`\n  position: absolute;\n  border-radius: 50%;\n  border: 1px solid ${({ color }) => color};\n  opacity: 0.7;\n  width: ${({ size }) => size}px;\n  height: ${({ size }) => size}px;\n  transition: height 1s ease-in, width 1s ease-in-out\n`;\n\nconst CenterDot = styled.div`\n  position: absolute;\n  width: 6px;\n  height: 6px;\n  background-color: ${({ color }) => color};\n  border-radius: 50%;\n  filter: brightness(.85);\n`;\n\nconst LegendGroup = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: end;\n`;\n\nconst colorMap = {\n  \"Military Personnel, Equipment & Facilities\": \"#DFC5B2\",\n  \"Vehicles\": \"#B7BCD6\",\n  \"Transportation Infrastructure\": \"#ACBCC5\",\n  \"Residential Buildings\": \"#5088A1\",\n  \"Manufacturing, Production, and Construction\": \"#998C84\",\n  \"Oil Infrastructure\": \"#D2D9B6\",\n  \"Media and Telecom Facilities\": \"#9194A8\",\n  \"Terrain\": \"#AEAC8D\",\n  \"Water Infrastructure\": \"#8EBADB\",\n  \"Electrical Infrastructure\": \"#78A898\",\n  \"Financial and Banking Facilities\": \"#98D5D3\"\n};\n\nexport default function CategoryBubbleChart(props) {\n  const { data, sizeScale, hoveredQuarter, setHoveredQuarter, hoverCategories } = props;\n  const categories = Array.from(\n    new Set(data.flatMap(d => d.categories.map(c => c.name)))\n  ).sort((a, b) => {\n    const totalA = data.reduce((sum, d) => {\n      const item = d.categories.find(c => c.name === a);\n      return sum + (item ? item.count : 0);\n    }, 0);\n    const totalB = data.reduce((sum, d) => {\n      const item = d.categories.find(c => c.name === b);\n      return sum + (item ? item.count : 0);\n    }, 0);\n    return totalB - totalA;\n  });\n\n  const maxRadiiByCategory = {};\n  categories.forEach(cat => {\n    const maxCount = Math.max(\n      ...data.map(d => {\n        const found = d.categories.find(c => c.name === cat);\n        return found ? found.count : 0;\n      })\n    );\n    maxRadiiByCategory[cat] = sizeScale(maxCount);\n  });\n\n  return (\n    <GridWrapper>\n      {categories.filter((c) => hoverCategories.length === 0 || hoverCategories.includes(c)).map((category, i) => {\n        const maxCategorySize = Math.max(\n          ...data.map(d => {\n            const found = d.categories.find(c => c.name === category);\n            return found ? sizeScale(found.count) : 0;\n          })\n        );\n\n        return (\n          <CategoryRow key={category}>\n            {i === 0 && <LegendGroup>\n              <CategoryLabel offset={0}>{category}</CategoryLabel>\n              <CircleLegend data={data} sizeScale={sizeScale} />\n            </LegendGroup>}\n            {i !== 0 && <CategoryLabel offset={0}>{category}</CategoryLabel>}\n            <QuarterRow>\n              {data.map((d) => {\n                const found = d.categories.find(c => c.name === category);\n                const count = found ? found.count : 0;\n                const size = sizeScale(count);\n                const label = d.quarter.split(\" \");\n                const color = colorMap[category] || '#ccc';\n                return (\n                  <CircleContainer style={{ opacity: hoveredQuarter === \"\" || hoveredQuarter === d.quarter ? 1 : .3 }} onMouseMove={() => setHoveredQuarter(d.quarter)} onMouseLeave={() => setHoveredQuarter(\"\")} key={`${category}-${d.quarter}`}>\n                    <QuarterLabel offset={-5}>{label[0]}</QuarterLabel>\n                    <QuarterLabel offset={maxRadiiByCategory[category] / 2}>{label[1]}</QuarterLabel>\n                    <CircleStack >\n                      <BlurredCircle size={size} color={color} />\n                      <OutlineCircle size={size} color={color} />\n                      <CenterDot color={color} />\n                    </CircleStack>\n                    <CountLabel color={color} offset={maxRadiiByCategory[category] / 2}>{count}</CountLabel>\n                  </CircleContainer>\n                );\n              })}\n            </QuarterRow>\n          </CategoryRow>\n        );\n      })}\n    </GridWrapper>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}