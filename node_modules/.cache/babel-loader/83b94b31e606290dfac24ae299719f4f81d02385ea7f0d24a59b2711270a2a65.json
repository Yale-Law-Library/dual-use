{"ast":null,"code":"var _jsxFileName = \"/Users/parkerkaufmann/Code/ylj/src/LineChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { select } from 'd3-selection';\nimport { scalePoint, scaleLinear, scaleOrdinal } from 'd3-scale';\nimport { max } from 'd3-array';\nimport { axisLeft, axisBottom } from 'd3-axis';\nimport { stack, area } from 'd3-shape';\nimport styled from 'styled-components';\nimport data from './mosul_targets_by_quarter.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChartContainer = styled.div`\n  width: 100%;\n  height: 600px;\n  font-family: 'Georgia', serif;\n  color: #333;\n`;\n_c = ChartContainer;\nconst Legend = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 1rem;\n  margin-bottom: 1rem;\n  font-size: 14px;\n`;\n_c2 = Legend;\nconst LegendItem = styled.div`\n  display: flex;\n  align-items: center;\n\n  &::before {\n    content: '';\n    display: inline-block;\n    width: 14px;\n    height: 14px;\n    margin-right: 6px;\n    background-color: ${props => props.color || '#000'};\n    opacity: 0.3;\n  }\n`;\n_c3 = LegendItem;\nexport default function MosulChart() {\n  _s();\n  const svgRef = useRef();\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    svg.selectAll('*').remove();\n    const margin = {\n      top: 20,\n      right: 20,\n      bottom: 40,\n      left: 60\n    };\n    const width = 900 - margin.left - margin.right;\n    const height = 500 - margin.top - margin.bottom;\n    const g = svg.attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('transform', `translate(${margin.left},${margin.top})`);\n    const quarters = data.map(d => d.quarter);\n    const categories = Array.from(new Set(data.flatMap(d => d.categories.map(c => c.name))));\n    const stackedData = stack().keys(categories).value((d, key) => {\n      const found = d.categories.find(c => c.name === key);\n      return found ? found.count : 0;\n    })(data);\n    const xScale = scalePoint().domain(quarters).range([0, width]);\n    const yMax = max(stackedData[stackedData.length - 1], d => d[1]);\n    const yScale = scaleLinear().domain([0, yMax]).range([height, 0]);\n    const color = scaleOrdinal().domain(categories).range([\"#e3d5ca\", \"#d5bdaf\", \"#a5a58d\", \"#6d6875\", \"#b5838d\", \"#9a8c98\", \"#c9ada7\", \"#f4acb7\", \"#ffcad4\", \"#d8e2dc\"]);\n    g.append('g').call(axisLeft(yScale));\n    g.append('g').attr('transform', `translate(0,${height})`).call(axisBottom(xScale)).selectAll('text').attr('transform', 'rotate(-45)').style('text-anchor', 'end');\n    g.selectAll('.layer').data(stackedData).enter().append('path').attr('fill', d => color(d.key)).attr('opacity', 0.3).attr('d', area().x((d, i) => xScale(data[i].quarter)).y0(d => yScale(d[0])).y1(d => yScale(d[1])));\n  }, []);\n  const categories = Array.from(new Set(data.flatMap(d => d.categories.map(c => c.name))));\n  return /*#__PURE__*/_jsxDEV(ChartContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Legend, {\n      children: categories.map((name, idx) => /*#__PURE__*/_jsxDEV(LegendItem, {\n        color: [\"#e3d5ca\", \"#d5bdaf\", \"#a5a58d\", \"#6d6875\", \"#b5838d\", \"#9a8c98\", \"#c9ada7\", \"#f4acb7\", \"#ffcad4\", \"#d8e2dc\"][idx % 10],\n        children: name\n      }, name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n}\n_s(MosulChart, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n_c4 = MosulChart;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"ChartContainer\");\n$RefreshReg$(_c2, \"Legend\");\n$RefreshReg$(_c3, \"LegendItem\");\n$RefreshReg$(_c4, \"MosulChart\");","map":{"version":3,"names":["React","useEffect","useRef","select","scalePoint","scaleLinear","scaleOrdinal","max","axisLeft","axisBottom","stack","area","styled","data","jsxDEV","_jsxDEV","ChartContainer","div","_c","Legend","_c2","LegendItem","props","color","_c3","MosulChart","_s","svgRef","svg","current","selectAll","remove","margin","top","right","bottom","left","width","height","g","attr","append","quarters","map","d","quarter","categories","Array","from","Set","flatMap","c","name","stackedData","keys","value","key","found","find","count","xScale","domain","range","yMax","length","yScale","call","style","enter","x","i","y0","y1","children","idx","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c4","$RefreshReg$"],"sources":["/Users/parkerkaufmann/Code/ylj/src/LineChart.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { select } from 'd3-selection';\nimport { scalePoint, scaleLinear, scaleOrdinal } from 'd3-scale';\nimport { max } from 'd3-array';\nimport { axisLeft, axisBottom } from 'd3-axis';\nimport { stack, area } from 'd3-shape';\nimport styled from 'styled-components';\nimport data from './mosul_targets_by_quarter.json';\n\nconst ChartContainer = styled.div`\n  width: 100%;\n  height: 600px;\n  font-family: 'Georgia', serif;\n  color: #333;\n`;\n\nconst Legend = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 1rem;\n  margin-bottom: 1rem;\n  font-size: 14px;\n`;\n\nconst LegendItem = styled.div`\n  display: flex;\n  align-items: center;\n\n  &::before {\n    content: '';\n    display: inline-block;\n    width: 14px;\n    height: 14px;\n    margin-right: 6px;\n    background-color: ${(props) => props.color || '#000'};\n    opacity: 0.3;\n  }\n`;\n\nexport default function MosulChart() {\n  const svgRef = useRef();\n\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    svg.selectAll('*').remove();\n\n    const margin = { top: 20, right: 20, bottom: 40, left: 60 };\n    const width = 900 - margin.left - margin.right;\n    const height = 500 - margin.top - margin.bottom;\n\n    const g = svg\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.top + margin.bottom)\n      .append('g')\n      .attr('transform', `translate(${margin.left},${margin.top})`);\n\n    const quarters = data.map((d) => d.quarter);\n    const categories = Array.from(new Set(data.flatMap((d) => d.categories.map((c) => c.name))));\n\n    const stackedData = stack()\n      .keys(categories)\n      .value((d, key) => {\n        const found = d.categories.find((c) => c.name === key);\n        return found ? found.count : 0;\n      })(data);\n\n    const xScale = scalePoint()\n      .domain(quarters)\n      .range([0, width]);\n\n    const yMax = max(stackedData[stackedData.length - 1], (d) => d[1]);\n\n    const yScale = scaleLinear()\n      .domain([0, yMax])\n      .range([height, 0]);\n\n    const color = scaleOrdinal()\n      .domain(categories)\n      .range([\"#e3d5ca\", \"#d5bdaf\", \"#a5a58d\", \"#6d6875\", \"#b5838d\", \"#9a8c98\", \"#c9ada7\", \"#f4acb7\", \"#ffcad4\", \"#d8e2dc\"]);\n\n    g.append('g')\n      .call(axisLeft(yScale));\n\n    g.append('g')\n      .attr('transform', `translate(0,${height})`)\n      .call(axisBottom(xScale))\n      .selectAll('text')\n      .attr('transform', 'rotate(-45)')\n      .style('text-anchor', 'end');\n\n    g.selectAll('.layer')\n      .data(stackedData)\n      .enter()\n      .append('path')\n      .attr('fill', (d) => color(d.key))\n      .attr('opacity', 0.3)\n      .attr('d', area()\n        .x((d, i) => xScale(data[i].quarter))\n        .y0((d) => yScale(d[0]))\n        .y1((d) => yScale(d[1])));\n  }, []);\n\n  const categories = Array.from(new Set(data.flatMap(d => d.categories.map(c => c.name))));\n\n  return (\n    <ChartContainer>\n      <Legend>\n        {categories.map((name, idx) => (\n          <LegendItem key={name} color={[\"#e3d5ca\", \"#d5bdaf\", \"#a5a58d\", \"#6d6875\", \"#b5838d\", \"#9a8c98\", \"#c9ada7\", \"#f4acb7\", \"#ffcad4\", \"#d8e2dc\"][idx % 10]}>\n            {name}\n          </LegendItem>\n        ))}\n      </Legend>\n      <svg ref={svgRef}></svg>\n    </ChartContainer>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}