{"ast":null,"code":"var _jsxFileName = \"/Users/parkerkaufmann/Code/ylj/src/LineChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { select } from 'd3-selection';\nimport { scalePoint, scaleLinear } from 'd3-scale';\nimport { max } from 'd3-array';\nimport { axisLeft, axisBottom } from 'd3-axis';\nimport { line, area } from 'd3-shape';\nimport { transition } from 'd3-transition';\nimport { easeCubicInOut } from 'd3-ease';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Title = styled.div`\ncolor: #000;\ntext-align: center;\nfont-size: 16px;\nfont-style: normal;\nfont-weight: 400;\nline-height: normal;\nmargin: 10px;\n`;\n_c = Title;\nconst ChartContainer = styled.div`\n  width: 570px;\n  color: #333;\n  font-family: 'Bennett Text', Georgia, serif;\n`;\n_c2 = ChartContainer;\nconst Legend = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: .5rem;\n  margin-bottom: 1rem;\n  font-size: 12px;\n`;\n_c3 = Legend;\nconst LegendItem = styled.div`\n  display: flex;\n  align-items: center;\n\n  &::before {\n    content: '';\n    display: inline-block;\n    width: 20px;\n    height: 2px;\n    margin-right: 6px;\n    background-color: ${props => props.color || '#000'};\n  }\n`;\n_c4 = LegendItem;\nexport default function LineChart(props) {\n  _s();\n  const {\n    data,\n    name,\n    setHoveredQuarter\n  } = props;\n  const svgRef = useRef();\n  const margin = {\n    top: 5,\n    right: 20,\n    bottom: 60,\n    left: 60\n  };\n  const width = 570 - margin.left - margin.right;\n  const height = 500 - margin.top - margin.bottom;\n  const [hover, setHover] = useState(null);\n  const hoveredQuarterRef = useRef(setHoveredQuarter);\n  useEffect(() => {\n    hoveredQuarterRef.current = setHover;\n  }, [setHover]);\n  const colorMap = {\n    \"Military Personnel, Equipment & Facilities\": \"#DFC5B2\",\n    \"Vehicles\": \"#B7BCD6\",\n    \"Transportation Infrastructure\": \"#ACBCC5\",\n    \"Residential Buildings\": \"#5088A1\",\n    \"Manufacturing, Production, and Construction\": \"#998C84\",\n    \"Oil Infrastructure\": \"#D2D9B6\",\n    \"Media and Telecom Facilities\": \"#9194A8\",\n    \"Terrain\": \"#AEAC8D\",\n    \"Water Infrastructure\": \"#8EBADB\",\n    \"Electrical Infrastructure\": \"#78A898\",\n    \"Financial and Banking Facilities\": \"#98D5D3\"\n  };\n  const sortedCategories = Array.from(new Set(data.flatMap(d => d.categories.map(c => c.name)))).sort((a, b) => {\n    const totalA = data.reduce((sum, d) => {\n      const item = d.categories.find(c => c.name === a);\n      return sum + (item ? item.count : 0);\n    }, 0);\n    const totalB = data.reduce((sum, d) => {\n      const item = d.categories.find(c => c.name === b);\n      return sum + (item ? item.count : 0);\n    }, 0);\n    return totalB - totalA;\n  });\n  const quarters = data.map(d => d.quarter);\n  const xScale = scalePoint().domain(quarters).range([0, width]);\n  const yMax = max(data, d => max(d.categories, c => c.count));\n  const yScale = scaleLinear().domain([0, yMax + 200]).range([height, 0]);\n  useEffect(() => {\n    const svg = select(svgRef.current);\n\n    // preserve <g.main> so paths can transition\n    let g = svg.select('g.main');\n    if (g.empty()) {\n      g = svg.attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('class', 'main').attr('transform', `translate(${margin.left},${margin.top})`);\n      g.append('g').attr('class', 'y-axis');\n      g.append('g').attr('class', 'x-axis').attr('transform', `translate(0,${height})`);\n      g.append('g').attr('class', 'x-custom-labels').attr('transform', `translate(0,${height})`);\n    } else {\n      let dataGroup = g.select('.data-group');\n      if (dataGroup.empty()) {\n        dataGroup = g.append('g').attr('class', 'data-group');\n      }\n    }\n    const t = transition().duration(1000).ease(easeCubicInOut);\n    let dataGroup = g.select('.data-group');\n    if (dataGroup.empty()) {\n      dataGroup = g.append('g').attr('class', 'data-group');\n    }\n    let defs = svg.select('defs');\n    if (defs.empty()) defs = svg.append('defs');\n    g.select('.y-axis').transition(t).call(g => g.select('.domain').attr('stroke', 'transparent')).call(axisLeft(yScale).ticks(5).tickSize(-width).tickPadding(8)).call(g => g.selectAll('line').attr('stroke', '#D9D9D9').attr('stroke-width', 0.5)).call(g => g.selectAll('text').attr('x', -12).attr(\"color\", \"#595959\").attr(\"font-size\", 12));\n    g.select('.x-axis').transition(t).call(axisBottom(xScale)).call(g => g.select('.domain').attr('stroke', 'transparent')).call(g => g.selectAll('line').attr('stroke', '#BCBCBC').attr('stroke-opacity', 0.35)).call(g => g.selectAll('text').attr('color', 'transparent'));\n    const labelGroup = g.select('.x-custom-labels');\n    labelGroup.selectAll('*').remove();\n    quarters.forEach((q, i) => {\n      const x = xScale(q);\n      if (x == null) return;\n      labelGroup.append('rect').attr('class', 'hover-rect').attr('x', x - xScale.step() / 2).attr('y', 0).attr('width', xScale.step()).attr('height', height).attr('fill', 'transparent').on('mouseenter', () => {\n        console.log(q);\n        setHover(q);\n        // Update vertical line position\n        verticalLine.attr('x1', x).attr('x2', x).style('opacity', 1);\n\n        // Draw highlight circles\n        highlightGroup.selectAll('circle').remove();\n        sortedCategories.forEach((category, idx) => {\n          var _data$find;\n          const entry = (_data$find = data.find(d => d.quarter === q)) === null || _data$find === void 0 ? void 0 : _data$find.categories.find(c => c.name === category);\n          if (entry) {\n            highlightGroup.append('circle').attr('cx', x).attr('cy', yScale(entry.count)).attr('r', 4).attr('fill', colorMap[category] || '#ccc').attr('stroke', 'white').attr('stroke-width', 1.5);\n          }\n        });\n      }).on('mouseleave', () => {\n        setHover(\"\");\n        verticalLine.style('opacity', 0);\n        highlightGroup.selectAll('circle').remove();\n      });\n    });\n    quarters.forEach(q => {\n      const [quarter, year] = q.split(\" \");\n      const x = xScale(q);\n      if (x != null) {\n        const group = labelGroup.append(\"g\").attr(\"transform\", `translate(${x},0)`);\n        group.append(\"text\").attr(\"y\", 22).attr(\"text-anchor\", \"middle\").attr(\"font-size\", 14).style(\"fill\", \"#595959\").text(quarter);\n        group.append(\"text\").attr(\"y\", 37).attr(\"font-size\", 14).attr(\"text-anchor\", \"middle\").style(\"fill\", \"#595959\").text(year);\n      }\n    });\n    const hoverGroup = g.select('.hover-group').empty() ? g.append('g').attr('class', 'hover-group') : g.select('.hover-group');\n    hoverGroup.selectAll('*').remove();\n    const verticalLine = hoverGroup.append('line').attr('class', 'hover-line').attr('stroke', '#999').attr('stroke-dasharray', '2,2').attr('y1', 0).attr('y2', height).style('opacity', 0);\n    const highlightGroup = hoverGroup.append('g').attr('class', 'hover-circles');\n\n    // Use the full svg for hover tracking so it sits above lines\n    const overlayGroup = g.select('.hover-overlay').empty() ? g.append('g').attr('class', 'hover-overlay') : g.select('.hover-overlay');\n    overlayGroup.selectAll('*').remove();\n    const step = xScale.step ? xScale.step() : width / quarters.length;\n    quarters.forEach(q => {\n      const x = xScale(q);\n      if (x == null) return;\n      overlayGroup.append('rect').attr('x', x - step / 2).attr('y', 0).attr('width', step).attr('height', height).attr('fill', 'transparent').style('cursor', 'pointer').on('mouseenter', () => {\n        verticalLine.attr('x1', x).attr('x2', x).style('opacity', 1);\n        highlightGroup.selectAll('circle').remove();\n        sortedCategories.forEach(category => {\n          var _data$find2;\n          const entry = (_data$find2 = data.find(d => d.quarter === q)) === null || _data$find2 === void 0 ? void 0 : _data$find2.categories.find(c => c.name === category);\n          if (entry) {\n            highlightGroup.append('circle').attr('cx', x).attr('cy', yScale(entry.count)).attr('r', 4).attr('fill', colorMap[category] || '#ccc').attr('stroke', 'white').attr('stroke-width', 1.5);\n          }\n        });\n      }).on('mouseleave', () => {\n        verticalLine.style('opacity', 0);\n        highlightGroup.selectAll('circle').remove();\n      });\n    });\n    sortedCategories.forEach((category, idx) => {\n      const lineData = data.map(d => {\n        const entry = d.categories.find(c => c.name === category);\n        return {\n          quarter: d.quarter,\n          count: entry ? entry.count : 0\n        };\n      });\n      const id = `grad-${idx}`;\n      const color = colorMap[category] || '#ccc';\n      let gradient = defs.select(`#${id}`);\n      if (gradient.empty()) {\n        gradient = defs.append('linearGradient').attr('id', id).attr('x1', '0%').attr('y1', '0%').attr('x2', '0%').attr('y2', '100%');\n        gradient.append('stop').attr('offset', '0%').attr('stop-color', color).attr('stop-opacity', 0.6);\n        gradient.append('stop').attr('offset', '100%').attr('stop-color', '#ffffff').attr('stop-opacity', 0.8);\n      }\n      const areaPath = area().x(d => xScale(d.quarter)).y0(height).y1(d => yScale(d.count));\n      const linePath = line().x(d => xScale(d.quarter)).y(d => yScale(d.count));\n      const areaSelection = dataGroup.selectAll(`.area-${idx}`).data([lineData]);\n      areaSelection.join(enter => enter.append('path').attr('class', `area-${idx}`).attr('fill', `url(#${id})`).attr('fill-opacity', 0.7).attr('stroke', 'none').attr('d', areaPath), update => update.transition(t).attr('d', areaPath));\n      const lineSelection = dataGroup.selectAll(`.line-${idx}`).data([lineData]);\n      lineSelection.join(enter => enter.append('path').attr('class', `line-${idx}`).attr('fill', 'none').attr('stroke', color).attr('stroke-width', 1.5).attr('d', linePath), update => update.transition(t).attr('d', linePath));\n    });\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(ChartContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: [\"Targets, By Total Number in Press Releases per Quarter in \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"#156082\",\n          fontWeight: 600\n        },\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 72\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Legend, {\n      children: sortedCategories.map(name => /*#__PURE__*/_jsxDEV(LegendItem, {\n        color: colorMap[name] || '#ccc',\n        children: name\n      }, name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 311,\n    columnNumber: 5\n  }, this);\n}\n_s(LineChart, \"O24F8xamWYxPOxxtA8TgGUqL0IM=\");\n_c5 = LineChart;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Title\");\n$RefreshReg$(_c2, \"ChartContainer\");\n$RefreshReg$(_c3, \"Legend\");\n$RefreshReg$(_c4, \"LegendItem\");\n$RefreshReg$(_c5, \"LineChart\");","map":{"version":3,"names":["React","useEffect","useRef","select","scalePoint","scaleLinear","max","axisLeft","axisBottom","line","area","transition","easeCubicInOut","styled","jsxDEV","_jsxDEV","Title","div","_c","ChartContainer","_c2","Legend","_c3","LegendItem","props","color","_c4","LineChart","_s","data","name","setHoveredQuarter","svgRef","margin","top","right","bottom","left","width","height","hover","setHover","useState","hoveredQuarterRef","current","colorMap","sortedCategories","Array","from","Set","flatMap","d","categories","map","c","sort","a","b","totalA","reduce","sum","item","find","count","totalB","quarters","quarter","xScale","domain","range","yMax","yScale","svg","g","empty","attr","append","dataGroup","t","duration","ease","defs","call","ticks","tickSize","tickPadding","selectAll","labelGroup","remove","forEach","q","i","x","step","on","console","log","verticalLine","style","highlightGroup","category","idx","_data$find","entry","year","split","group","text","hoverGroup","overlayGroup","length","_data$find2","lineData","id","gradient","areaPath","y0","y1","linePath","y","areaSelection","join","enter","update","lineSelection","children","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c5","$RefreshReg$"],"sources":["/Users/parkerkaufmann/Code/ylj/src/LineChart.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { select } from 'd3-selection';\nimport { scalePoint, scaleLinear } from 'd3-scale';\nimport { max } from 'd3-array';\nimport { axisLeft, axisBottom } from 'd3-axis';\nimport { line, area } from 'd3-shape';\nimport { transition } from 'd3-transition';\nimport { easeCubicInOut } from 'd3-ease';\nimport styled from 'styled-components';\n\nconst Title = styled.div`\ncolor: #000;\ntext-align: center;\nfont-size: 16px;\nfont-style: normal;\nfont-weight: 400;\nline-height: normal;\nmargin: 10px;\n`;\n\nconst ChartContainer = styled.div`\n  width: 570px;\n  color: #333;\n  font-family: 'Bennett Text', Georgia, serif;\n`;\n\nconst Legend = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: .5rem;\n  margin-bottom: 1rem;\n  font-size: 12px;\n`;\n\nconst LegendItem = styled.div`\n  display: flex;\n  align-items: center;\n\n  &::before {\n    content: '';\n    display: inline-block;\n    width: 20px;\n    height: 2px;\n    margin-right: 6px;\n    background-color: ${(props) => props.color || '#000'};\n  }\n`;\n\nexport default function LineChart(props) {\n  const { data, name, setHoveredQuarter } = props;\n  const svgRef = useRef();\n  const margin = { top: 5, right: 20, bottom: 60, left: 60 };\n  const width = 570 - margin.left - margin.right;\n  const height = 500 - margin.top - margin.bottom;\n\n  const [hover, setHover] = useState(null);\n  const hoveredQuarterRef = useRef(setHoveredQuarter);\n\n  useEffect(() => {\n    hoveredQuarterRef.current = setHover;\n  }, [setHover]);\n\n  const colorMap = {\n    \"Military Personnel, Equipment & Facilities\": \"#DFC5B2\",\n    \"Vehicles\": \"#B7BCD6\",\n    \"Transportation Infrastructure\": \"#ACBCC5\",\n    \"Residential Buildings\": \"#5088A1\",\n    \"Manufacturing, Production, and Construction\": \"#998C84\",\n    \"Oil Infrastructure\": \"#D2D9B6\",\n    \"Media and Telecom Facilities\": \"#9194A8\",\n    \"Terrain\": \"#AEAC8D\",\n    \"Water Infrastructure\": \"#8EBADB\",\n    \"Electrical Infrastructure\": \"#78A898\",\n    \"Financial and Banking Facilities\": \"#98D5D3\"\n  };\n\n  const sortedCategories = Array.from(\n    new Set(data.flatMap(d => d.categories.map(c => c.name)))\n  ).sort((a, b) => {\n    const totalA = data.reduce((sum, d) => {\n      const item = d.categories.find(c => c.name === a);\n      return sum + (item ? item.count : 0);\n    }, 0);\n    const totalB = data.reduce((sum, d) => {\n      const item = d.categories.find(c => c.name === b);\n      return sum + (item ? item.count : 0);\n    }, 0);\n    return totalB - totalA;\n  });\n\n  const quarters = data.map((d) => d.quarter);\n  const xScale = scalePoint().domain(quarters).range([0, width]);\n  const yMax = max(data, (d) => max(d.categories, (c) => c.count));\n  const yScale = scaleLinear().domain([0, yMax + 200]).range([height, 0]);\n\n  useEffect(() => {\n    const svg = select(svgRef.current);\n\n    // preserve <g.main> so paths can transition\n    let g = svg.select('g.main');\n    if (g.empty()) {\n      g = svg\n        .attr('width', width + margin.left + margin.right)\n        .attr('height', height + margin.top + margin.bottom)\n        .append('g')\n        .attr('class', 'main')\n        .attr('transform', `translate(${margin.left},${margin.top})`);\n\n      g.append('g').attr('class', 'y-axis');\n      g.append('g').attr('class', 'x-axis').attr('transform', `translate(0,${height})`);\n      g.append('g').attr('class', 'x-custom-labels').attr('transform', `translate(0,${height})`);\n    } else {\n      let dataGroup = g.select('.data-group');\n      if (dataGroup.empty()) {\n        dataGroup = g.append('g').attr('class', 'data-group');\n      }\n    }\n\n    const t = transition().duration(1000).ease(easeCubicInOut);\n\n    let dataGroup = g.select('.data-group');\n    if (dataGroup.empty()) {\n      dataGroup = g.append('g').attr('class', 'data-group');\n    }\n    let defs = svg.select('defs');\n    if (defs.empty()) defs = svg.append('defs');\n\n    g.select('.y-axis')\n      .transition(t)\n      .call(g => g.select('.domain').attr('stroke', 'transparent'))\n      .call(axisLeft(yScale).ticks(5).tickSize(-width).tickPadding(8))\n\n      .call(g => g.selectAll('line').attr('stroke', '#D9D9D9').attr('stroke-width', 0.5))\n      .call(g => g.selectAll('text').attr('x', -12).attr(\"color\", \"#595959\").attr(\"font-size\", 12));\n\n    g.select('.x-axis')\n      .transition(t)\n      .call(axisBottom(xScale))\n      .call(g => g.select('.domain').attr('stroke', 'transparent'))\n      .call(g => g.selectAll('line').attr('stroke', '#BCBCBC').attr('stroke-opacity', 0.35))\n      .call(g => g.selectAll('text').attr('color', 'transparent'));\n\n    const labelGroup = g.select('.x-custom-labels');\n    labelGroup.selectAll('*').remove();\n\n    quarters.forEach((q, i) => {\n      const x = xScale(q);\n      if (x == null) return;\n\n      labelGroup.append('rect')\n        .attr('class', 'hover-rect')\n        .attr('x', x - (xScale.step() / 2))\n        .attr('y', 0)\n        .attr('width', xScale.step())\n        .attr('height', height)\n        .attr('fill', 'transparent')\n        .on('mouseenter', () => {\n          console.log(q);\n          setHover(q);\n          // Update vertical line position\n          verticalLine\n            .attr('x1', x)\n            .attr('x2', x)\n            .style('opacity', 1);\n\n          // Draw highlight circles\n          highlightGroup.selectAll('circle').remove();\n          sortedCategories.forEach((category, idx) => {\n            const entry = data.find(d => d.quarter === q)?.categories.find(c => c.name === category);\n            if (entry) {\n              highlightGroup.append('circle')\n                .attr('cx', x)\n                .attr('cy', yScale(entry.count))\n                .attr('r', 4)\n                .attr('fill', colorMap[category] || '#ccc')\n                .attr('stroke', 'white')\n                .attr('stroke-width', 1.5);\n            }\n          });\n        })\n        .on('mouseleave', () => {\n          setHover(\"\");\n          verticalLine.style('opacity', 0);\n          highlightGroup.selectAll('circle').remove();\n        });\n    });\n\n    quarters.forEach((q) => {\n      const [quarter, year] = q.split(\" \");\n      const x = xScale(q);\n      if (x != null) {\n        const group = labelGroup.append(\"g\").attr(\"transform\", `translate(${x},0)`);\n        group.append(\"text\").attr(\"y\", 22).attr(\"text-anchor\", \"middle\").attr(\"font-size\", 14).style(\"fill\", \"#595959\").text(quarter);\n        group.append(\"text\").attr(\"y\", 37).attr(\"font-size\", 14).attr(\"text-anchor\", \"middle\").style(\"fill\", \"#595959\").text(year);\n      }\n    });\n\n    const hoverGroup = g.select('.hover-group').empty()\n      ? g.append('g').attr('class', 'hover-group')\n      : g.select('.hover-group');\n\n    hoverGroup.selectAll('*').remove();\n\n    const verticalLine = hoverGroup.append('line')\n      .attr('class', 'hover-line')\n      .attr('stroke', '#999')\n      .attr('stroke-dasharray', '2,2')\n      .attr('y1', 0)\n      .attr('y2', height)\n      .style('opacity', 0);\n\n    const highlightGroup = hoverGroup.append('g').attr('class', 'hover-circles');\n\n    // Use the full svg for hover tracking so it sits above lines\n    const overlayGroup = g.select('.hover-overlay').empty()\n      ? g.append('g').attr('class', 'hover-overlay')\n      : g.select('.hover-overlay');\n\n    overlayGroup.selectAll('*').remove();\n\n    const step = xScale.step ? xScale.step() : width / quarters.length;\n\n    quarters.forEach((q) => {\n      const x = xScale(q);\n      if (x == null) return;\n\n      overlayGroup.append('rect')\n        .attr('x', x - step / 2)\n        .attr('y', 0)\n        .attr('width', step)\n        .attr('height', height)\n        .attr('fill', 'transparent')\n        .style('cursor', 'pointer')\n        .on('mouseenter', () => {\n          verticalLine\n            .attr('x1', x)\n            .attr('x2', x)\n            .style('opacity', 1);\n\n          highlightGroup.selectAll('circle').remove();\n          sortedCategories.forEach((category) => {\n            const entry = data.find(d => d.quarter === q)?.categories.find(c => c.name === category);\n            if (entry) {\n              highlightGroup.append('circle')\n                .attr('cx', x)\n                .attr('cy', yScale(entry.count))\n                .attr('r', 4)\n                .attr('fill', colorMap[category] || '#ccc')\n                .attr('stroke', 'white')\n                .attr('stroke-width', 1.5);\n            }\n          });\n        })\n        .on('mouseleave', () => {\n          verticalLine.style('opacity', 0);\n          highlightGroup.selectAll('circle').remove();\n        });\n    });\n\n    sortedCategories.forEach((category, idx) => {\n      const lineData = data.map((d) => {\n        const entry = d.categories.find((c) => c.name === category);\n        return { quarter: d.quarter, count: entry ? entry.count : 0 };\n      });\n\n      const id = `grad-${idx}`;\n      const color = colorMap[category] || '#ccc';\n\n      let gradient = defs.select(`#${id}`);\n      if (gradient.empty()) {\n        gradient = defs.append('linearGradient')\n          .attr('id', id)\n          .attr('x1', '0%')\n          .attr('y1', '0%')\n          .attr('x2', '0%')\n          .attr('y2', '100%');\n        gradient.append('stop').attr('offset', '0%').attr('stop-color', color).attr('stop-opacity', 0.6);\n        gradient.append('stop').attr('offset', '100%').attr('stop-color', '#ffffff').attr('stop-opacity', 0.8);\n      }\n\n      const areaPath = area().x(d => xScale(d.quarter)).y0(height).y1(d => yScale(d.count));\n      const linePath = line().x(d => xScale(d.quarter)).y(d => yScale(d.count));\n\n      const areaSelection = dataGroup.selectAll(`.area-${idx}`).data([lineData]);\n      areaSelection\n        .join(\n          enter => enter.append('path')\n            .attr('class', `area-${idx}`)\n            .attr('fill', `url(#${id})`)\n            .attr('fill-opacity', 0.7)\n            .attr('stroke', 'none')\n            .attr('d', areaPath),\n          update => update.transition(t).attr('d', areaPath)\n        );\n\n      const lineSelection = dataGroup.selectAll(`.line-${idx}`).data([lineData]);\n      lineSelection\n        .join(\n          enter => enter.append('path')\n            .attr('class', `line-${idx}`)\n            .attr('fill', 'none')\n            .attr('stroke', color)\n            .attr('stroke-width', 1.5)\n            .attr('d', linePath),\n          update => update.transition(t).attr('d', linePath)\n        );\n    });\n  }, [data]);\n\n  return (\n    <ChartContainer>\n      <Title>Targets, By Total Number in Press Releases per Quarter in <span style={{ color: \"#156082\", fontWeight: 600 }}>{name}</span> </Title>\n      <Legend>\n        {sortedCategories.map((name) => (\n          <LegendItem key={name} color={colorMap[name] || '#ccc'}>\n            {name}\n          </LegendItem>\n        ))}\n      </Legend>\n      <svg ref={svgRef}></svg>\n    </ChartContainer>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}