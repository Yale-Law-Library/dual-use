{"ast":null,"code":"var _jsxFileName = \"/Users/parkerkaufmann/Code/ylj/src/CategoryBubbleChart.jsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport data from './mosul_targets_by_quarter.json';\nimport { scaleLinear } from 'd3-scale';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GridWrapper = styled.div`\n  padding: 2rem;\n  font-family: 'Bennett Text', Georgia, serif;\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n`;\n_c = GridWrapper;\nconst CategoryRow = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n_c2 = CategoryRow;\nconst CategoryLabel = styled.div`\n  font-size: 20px;\n  font-weight: 500;\n  margin-bottom: 0.5rem;\n`;\n_c3 = CategoryLabel;\nconst QuarterRow = styled.div`\n  display: flex;\n  align-items: flex-end;\n  gap: 6px;\n`;\n_c4 = QuarterRow;\nconst CircleContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 50px;\n`;\n_c5 = CircleContainer;\nconst CircleStack = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n_c6 = CircleStack;\nconst BlurredCircle = styled.div`\n  position: absolute;\n  border-radius: 50%;\n  background-color: ${({\n  color\n}) => color};\n  opacity: 0.7;\n  filter: blur(3px);\n  width: ${({\n  size\n}) => size}px;\n  height: ${({\n  size\n}) => size}px;\n`;\n_c7 = BlurredCircle;\nconst OutlineCircle = styled.div`\n  position: absolute;\n  border-radius: 50%;\n  border: 1px solid ${({\n  color\n}) => color};\n  width: ${({\n  size\n}) => size}px;\n  height: ${({\n  size\n}) => size}px;\n`;\n_c8 = OutlineCircle;\nconst CenterDot = styled.div`\n  position: absolute;\n  width: 6px;\n  height: 6px;\n  background-color: ${({\n  color\n}) => color};\n  border-radius: 50%;\n  z-Index: 1;\n`;\n_c9 = CenterDot;\nconst QuarterLabel = styled.div`\n  font-size: 10px;\n  text-align: center;\n  margin-top: 0.25rem;\n`;\n_c10 = QuarterLabel;\nconst CountLabel = styled.div`\n  font-size: 10px;\n  margin-top: 2px;\n  color: #333;\n`;\n_c11 = CountLabel;\nconst colorMap = {\n  \"Military Personnel, Equipment & Facilities\": \"#DFC5B2\",\n  \"Vehicles\": \"#B7BCD6\",\n  \"Transportation Infrastructure\": \"#ACBCC5\",\n  \"Residential Buildings\": \"#5088A1\",\n  \"Manufacturing, Production, and Construction\": \"#998C84\",\n  \"Oil Infrastructure\": \"#D2D9B6\",\n  \"Media and Telecom Facilities\": \"#9194A8\",\n  \"Terrain\": \"#AEAC8D\",\n  \"Water Infrastructure\": \"#8EBADB\",\n  \"Electrical Infrastructure\": \"#78A898\",\n  \"Financial and Banking Facilities\": \"#98D5D3\"\n};\nconst allCounts = data.flatMap(d => d.categories.map(c => c.count));\nconst minCount = Math.min(...allCounts);\nconst maxCount = Math.max(...allCounts);\nconst sizeScale = scaleLinear().domain([minCount, maxCount]).range([8, 80]);\nexport default function CategoryBubbleChart() {\n  const categories = Array.from(new Set(data.flatMap(d => d.categories.map(c => c.name))));\n  return /*#__PURE__*/_jsxDEV(GridWrapper, {\n    children: categories.map(category => /*#__PURE__*/_jsxDEV(CategoryRow, {\n      children: [/*#__PURE__*/_jsxDEV(CategoryLabel, {\n        children: category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(QuarterRow, {\n        children: data.map(d => {\n          const found = d.categories.find(c => c.name === category);\n          const count = found ? found.count : 0;\n          const size = scaleSize(count);\n          const label = d.quarter.split(\" \");\n          const color = count === 0 ? \"transparent\" : colorMap[category] || '#ccc';\n          return /*#__PURE__*/_jsxDEV(CircleContainer, {\n            children: [/*#__PURE__*/_jsxDEV(QuarterLabel, {\n              children: label[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(QuarterLabel, {\n              children: label[1]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(CircleStack, {\n              children: [/*#__PURE__*/_jsxDEV(BlurredCircle, {\n                size: size,\n                color: color\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(OutlineCircle, {\n                size: size,\n                color: color\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(CenterDot, {\n                color: color\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(CountLabel, {\n              children: count\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 19\n            }, this)]\n          }, `${category}-${d.quarter}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)]\n    }, category, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n_c12 = CategoryBubbleChart;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12;\n$RefreshReg$(_c, \"GridWrapper\");\n$RefreshReg$(_c2, \"CategoryRow\");\n$RefreshReg$(_c3, \"CategoryLabel\");\n$RefreshReg$(_c4, \"QuarterRow\");\n$RefreshReg$(_c5, \"CircleContainer\");\n$RefreshReg$(_c6, \"CircleStack\");\n$RefreshReg$(_c7, \"BlurredCircle\");\n$RefreshReg$(_c8, \"OutlineCircle\");\n$RefreshReg$(_c9, \"CenterDot\");\n$RefreshReg$(_c10, \"QuarterLabel\");\n$RefreshReg$(_c11, \"CountLabel\");\n$RefreshReg$(_c12, \"CategoryBubbleChart\");","map":{"version":3,"names":["React","styled","data","scaleLinear","jsxDEV","_jsxDEV","GridWrapper","div","_c","CategoryRow","_c2","CategoryLabel","_c3","QuarterRow","_c4","CircleContainer","_c5","CircleStack","_c6","BlurredCircle","color","size","_c7","OutlineCircle","_c8","CenterDot","_c9","QuarterLabel","_c10","CountLabel","_c11","colorMap","allCounts","flatMap","d","categories","map","c","count","minCount","Math","min","maxCount","max","sizeScale","domain","range","CategoryBubbleChart","Array","from","Set","name","children","category","fileName","_jsxFileName","lineNumber","columnNumber","found","find","scaleSize","label","quarter","split","_c12","$RefreshReg$"],"sources":["/Users/parkerkaufmann/Code/ylj/src/CategoryBubbleChart.jsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport data from './mosul_targets_by_quarter.json';\nimport { scaleLinear } from 'd3-scale';\n\nconst GridWrapper = styled.div`\n  padding: 2rem;\n  font-family: 'Bennett Text', Georgia, serif;\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n`;\n\nconst CategoryRow = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst CategoryLabel = styled.div`\n  font-size: 20px;\n  font-weight: 500;\n  margin-bottom: 0.5rem;\n`;\n\nconst QuarterRow = styled.div`\n  display: flex;\n  align-items: flex-end;\n  gap: 6px;\n`;\n\nconst CircleContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 50px;\n`;\n\nconst CircleStack = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst BlurredCircle = styled.div`\n  position: absolute;\n  border-radius: 50%;\n  background-color: ${({ color }) => color};\n  opacity: 0.7;\n  filter: blur(3px);\n  width: ${({ size }) => size}px;\n  height: ${({ size }) => size}px;\n`;\n\nconst OutlineCircle = styled.div`\n  position: absolute;\n  border-radius: 50%;\n  border: 1px solid ${({ color }) => color};\n  width: ${({ size }) => size}px;\n  height: ${({ size }) => size}px;\n`;\n\nconst CenterDot = styled.div`\n  position: absolute;\n  width: 6px;\n  height: 6px;\n  background-color: ${({ color }) => color};\n  border-radius: 50%;\n  z-Index: 1;\n`;\n\nconst QuarterLabel = styled.div`\n  font-size: 10px;\n  text-align: center;\n  margin-top: 0.25rem;\n`;\n\nconst CountLabel = styled.div`\n  font-size: 10px;\n  margin-top: 2px;\n  color: #333;\n`;\n\nconst colorMap = {\n  \"Military Personnel, Equipment & Facilities\": \"#DFC5B2\",\n  \"Vehicles\": \"#B7BCD6\",\n  \"Transportation Infrastructure\": \"#ACBCC5\",\n  \"Residential Buildings\": \"#5088A1\",\n  \"Manufacturing, Production, and Construction\": \"#998C84\",\n  \"Oil Infrastructure\": \"#D2D9B6\",\n  \"Media and Telecom Facilities\": \"#9194A8\",\n  \"Terrain\": \"#AEAC8D\",\n  \"Water Infrastructure\": \"#8EBADB\",\n  \"Electrical Infrastructure\": \"#78A898\",\n  \"Financial and Banking Facilities\": \"#98D5D3\"\n};\n\nconst allCounts = data.flatMap(d => d.categories.map(c => c.count));\nconst minCount = Math.min(...allCounts);\nconst maxCount = Math.max(...allCounts);\n\nconst sizeScale = scaleLinear()\n  .domain([minCount, maxCount])\n  .range([8, 80]);\n\nexport default function CategoryBubbleChart() {\n  const categories = Array.from(\n    new Set(data.flatMap(d => d.categories.map(c => c.name)))\n  );\n\n  return (\n    <GridWrapper>\n      {categories.map((category) => (\n        <CategoryRow key={category}>\n          <CategoryLabel>{category}</CategoryLabel>\n          <QuarterRow>\n            {data.map((d) => {\n              const found = d.categories.find(c => c.name === category);\n              const count = found ? found.count : 0;\n              const size = scaleSize(count);\n              const label = d.quarter.split(\" \");\n              const color = count === 0 ? \"transparent\" : colorMap[category] || '#ccc';\n              return (\n                <CircleContainer key={`${category}-${d.quarter}`}>\n\n                  <QuarterLabel>{label[0]}</QuarterLabel>\n                  <QuarterLabel>{label[1]}</QuarterLabel>\n                  <CircleStack>\n                    <BlurredCircle size={size} color={color} />\n                    <OutlineCircle size={size} color={color} />\n                    <CenterDot color={color} />\n                  </CircleStack>\n                  <CountLabel>{count}</CountLabel>\n                </CircleContainer>\n              );\n            })}\n          </QuarterRow>\n        </CategoryRow>\n      ))}\n    </GridWrapper>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}