{"ast":null,"code":"var _jsxFileName = \"/Users/parkerkaufmann/Code/ylj/src/LineChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Title = styled.div`\n  color: #000;\n  text-align: center;\n  font-size: 16px;\n  font-weight: 400;\n  margin: 10px;\n`;\n_c = Title;\nconst ChartContainer = styled.div`\n  width: 570px;\n  color: #333;\n  font-family: 'Bennett Text', Georgia, serif;\n`;\n_c2 = ChartContainer;\nconst Legend = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 0.5rem;\n  margin-bottom: 1rem;\n  font-size: 12px;\n`;\n_c3 = Legend;\nconst LegendItem = styled.div`\n  display: flex;\n  align-items: center;\n\n  &::before {\n    content: '';\n    display: inline-block;\n    width: 20px;\n    height: 2px;\n    margin-right: 6px;\n    background-color: ${props => props.color || '#000'};\n  }\n`;\n_c4 = LegendItem;\nexport default function LineChart({\n  data,\n  name\n}) {\n  _s();\n  const svgRef = useRef();\n  const colorMap = {\n    \"Military Personnel, Equipment & Facilities\": \"#DFC5B2\",\n    \"Vehicles\": \"#B7BCD6\",\n    \"Transportation Infrastructure\": \"#ACBCC5\",\n    \"Residential Buildings\": \"#5088A1\",\n    \"Manufacturing, Production, and Construction\": \"#998C84\",\n    \"Oil Infrastructure\": \"#D2D9B6\",\n    \"Media and Telecom Facilities\": \"#9194A8\",\n    \"Terrain\": \"#AEAC8D\",\n    \"Water Infrastructure\": \"#8EBADB\",\n    \"Electrical Infrastructure\": \"#78A898\",\n    \"Financial and Banking Facilities\": \"#98D5D3\"\n  };\n  const sortedCategories = Array.from(new Set(data.flatMap(d => d.categories.map(c => c.name)))).sort((a, b) => {\n    const totalA = data.reduce((sum, d) => {\n      const item = d.categories.find(c => c.name === a);\n      return sum + (item ? item.count : 0);\n    }, 0);\n    const totalB = data.reduce((sum, d) => {\n      const item = d.categories.find(c => c.name === b);\n      return sum + (item ? item.count : 0);\n    }, 0);\n    return totalB - totalA;\n  });\n  const quarters = data.map(d => d.quarter);\n  const groups = d3.group(sortedCategories.flatMap(category => {\n    return [data.map(d => {\n      const entry = d.categories.find(c => c.name === category);\n      return [d.quarter, entry ? entry.count : 0, category];\n    })];\n  }), d => d[0][2]);\n  const color = category => colorMap[category] || '#ccc';\n  const xScale = d3.scalePoint().domain(quarters).range([0, 570 - 60 - 20]);\n  const yMax = d3.max(data, d => d3.max(d.categories, c => c.count));\n  const yScale = d3.scaleLinear().domain([0, yMax + 200]).range([500 - 5 - 60, 0]);\n  const lineGen = d3.line().x(d => xScale(d[0])).y(d => yScale(d[1])).curve(d3.curveMonotoneX);\n  useEffect(() => {\n    const svg = d3.select(svgRef.current);\n    svg.attr('width', 570).attr('height', 500);\n    svg.append('g').attr('id', 'data-paths').attr('fill', 'none').attr('stroke-width', 3).attr('stroke-linejoin', 'round').attr('stroke-linecap', 'round').selectAll('path').data(groups.values()).join('path').attr('class', 'lines').attr('stroke', d => color(d[0][2])).attr('stroke-width', '1.5px').attr('d', lineGen);\n  }, []);\n  useEffect(() => {\n    const t = d3.transition().duration(500).ease(d3.easeLinear);\n    d3.selectAll('#data-paths').attr('fill', 'none').attr('stroke-width', 3).attr('stroke-linejoin', 'round').attr('stroke-linecap', 'round').selectAll('path').data(groups.values()).join('path').attr('stroke', d => color(d[0][2])).attr('stroke-width', '1.5px').transition(t).attr('d', lineGen);\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(ChartContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: [\"Targets, By Total Number in Press Releases per Quarter in\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: '#156082',\n          fontWeight: 600\n        },\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Legend, {\n      children: sortedCategories.map(name => /*#__PURE__*/_jsxDEV(LegendItem, {\n        color: colorMap[name] || '#ccc',\n        children: name\n      }, name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n}\n_s(LineChart, \"xZvsc6Dl8WHAXhRrVyhrxei3QC0=\");\n_c5 = LineChart;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Title\");\n$RefreshReg$(_c2, \"ChartContainer\");\n$RefreshReg$(_c3, \"Legend\");\n$RefreshReg$(_c4, \"LegendItem\");\n$RefreshReg$(_c5, \"LineChart\");","map":{"version":3,"names":["React","useEffect","useRef","d3","styled","jsxDEV","_jsxDEV","Title","div","_c","ChartContainer","_c2","Legend","_c3","LegendItem","props","color","_c4","LineChart","data","name","_s","svgRef","colorMap","sortedCategories","Array","from","Set","flatMap","d","categories","map","c","sort","a","b","totalA","reduce","sum","item","find","count","totalB","quarters","quarter","groups","group","category","entry","xScale","scalePoint","domain","range","yMax","max","yScale","scaleLinear","lineGen","line","x","y","curve","curveMonotoneX","svg","select","current","attr","append","selectAll","values","join","t","transition","duration","ease","easeLinear","children","style","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c5","$RefreshReg$"],"sources":["/Users/parkerkaufmann/Code/ylj/src/LineChart.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport styled from 'styled-components';\n\nconst Title = styled.div`\n  color: #000;\n  text-align: center;\n  font-size: 16px;\n  font-weight: 400;\n  margin: 10px;\n`;\n\nconst ChartContainer = styled.div`\n  width: 570px;\n  color: #333;\n  font-family: 'Bennett Text', Georgia, serif;\n`;\n\nconst Legend = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 0.5rem;\n  margin-bottom: 1rem;\n  font-size: 12px;\n`;\n\nconst LegendItem = styled.div`\n  display: flex;\n  align-items: center;\n\n  &::before {\n    content: '';\n    display: inline-block;\n    width: 20px;\n    height: 2px;\n    margin-right: 6px;\n    background-color: ${(props) => props.color || '#000'};\n  }\n`;\n\nexport default function LineChart({ data, name }) {\n  const svgRef = useRef();\n\n  const colorMap = {\n    \"Military Personnel, Equipment & Facilities\": \"#DFC5B2\",\n    \"Vehicles\": \"#B7BCD6\",\n    \"Transportation Infrastructure\": \"#ACBCC5\",\n    \"Residential Buildings\": \"#5088A1\",\n    \"Manufacturing, Production, and Construction\": \"#998C84\",\n    \"Oil Infrastructure\": \"#D2D9B6\",\n    \"Media and Telecom Facilities\": \"#9194A8\",\n    \"Terrain\": \"#AEAC8D\",\n    \"Water Infrastructure\": \"#8EBADB\",\n    \"Electrical Infrastructure\": \"#78A898\",\n    \"Financial and Banking Facilities\": \"#98D5D3\"\n  };\n\n  const sortedCategories = Array.from(\n    new Set(data.flatMap((d) => d.categories.map((c) => c.name)))\n  ).sort((a, b) => {\n    const totalA = data.reduce((sum, d) => {\n      const item = d.categories.find((c) => c.name === a);\n      return sum + (item ? item.count : 0);\n    }, 0);\n    const totalB = data.reduce((sum, d) => {\n      const item = d.categories.find((c) => c.name === b);\n      return sum + (item ? item.count : 0);\n    }, 0);\n    return totalB - totalA;\n  });\n\n  const quarters = data.map((d) => d.quarter);\n  const groups = d3.group(\n    sortedCategories.flatMap((category) => {\n      return [\n        data.map((d) => {\n          const entry = d.categories.find((c) => c.name === category);\n          return [d.quarter, entry ? entry.count : 0, category];\n        }),\n      ];\n    }),\n    (d) => d[0][2]\n  );\n\n  const color = (category) => colorMap[category] || '#ccc';\n\n  const xScale = d3.scalePoint().domain(quarters).range([0, 570 - 60 - 20]);\n  const yMax = d3.max(data, (d) => d3.max(d.categories, (c) => c.count));\n  const yScale = d3.scaleLinear().domain([0, yMax + 200]).range([500 - 5 - 60, 0]);\n\n  const lineGen = d3\n    .line()\n    .x((d) => xScale(d[0]))\n    .y((d) => yScale(d[1]))\n    .curve(d3.curveMonotoneX);\n\n  useEffect(() => {\n    const svg = d3.select(svgRef.current);\n\n    svg\n      .attr('width', 570)\n      .attr('height', 500);\n\n    svg\n      .append('g')\n      .attr('id', 'data-paths')\n      .attr('fill', 'none')\n      .attr('stroke-width', 3)\n      .attr('stroke-linejoin', 'round')\n      .attr('stroke-linecap', 'round')\n      .selectAll('path')\n      .data(groups.values())\n      .join('path')\n      .attr('class', 'lines')\n      .attr('stroke', (d) => color(d[0][2]))\n      .attr('stroke-width', '1.5px')\n      .attr('d', lineGen);\n  }, []);\n\n  useEffect(() => {\n    const t = d3.transition().duration(500).ease(d3.easeLinear);\n\n    d3.selectAll('#data-paths')\n      .attr('fill', 'none')\n      .attr('stroke-width', 3)\n      .attr('stroke-linejoin', 'round')\n      .attr('stroke-linecap', 'round')\n      .selectAll('path')\n      .data(groups.values())\n      .join('path')\n      .attr('stroke', (d) => color(d[0][2]))\n      .attr('stroke-width', '1.5px')\n      .transition(t)\n      .attr('d', lineGen);\n  }, [data]);\n\n  return (\n    <ChartContainer>\n      <Title>\n        Targets, By Total Number in Press Releases per Quarter in{' '}\n        <span style={{ color: '#156082', fontWeight: 600 }}>{name}</span>\n      </Title>\n      <Legend>\n        {sortedCategories.map((name) => (\n          <LegendItem key={name} color={colorMap[name] || '#ccc'}>\n            {name}\n          </LegendItem>\n        ))}\n      </Legend>\n      <svg ref={svgRef}></svg>\n    </ChartContainer>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}