{"ast":null,"code":"var _jsxFileName = \"/Users/parkerkaufmann/Code/ylj/src/LineChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { select } from 'd3-selection';\nimport { scalePoint, scaleLinear } from 'd3-scale';\nimport { max } from 'd3-array';\nimport { axisLeft, axisBottom } from 'd3-axis';\nimport { line, area } from 'd3-shape';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Title = styled.div`\ncolor: #000;\ntext-align: center;\nfont-size: 16px;\nfont-style: normal;\nfont-weight: 400;\nline-height: normal;\nmargin: 10px;\n`;\n_c = Title;\nconst ChartContainer = styled.div`\n  width: 570px;\n  color: #333;\n  font-family: 'Bennett Text', Georgia, serif;\n`;\n_c2 = ChartContainer;\nconst Legend = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: .5rem;\n  margin-bottom: 1rem;\n  font-size: 12px;\n`;\n_c3 = Legend;\nconst LegendItem = styled.div`\n  display: flex;\n  align-items: center;\n\n  &::before {\n    content: '';\n    display: inline-block;\n    width: 20px;\n    height: 2px;\n    margin-right: 6px;\n    background-color: ${props => props.color || '#000'};\n  }\n`;\n_c4 = LegendItem;\nexport default function LineChart(props) {\n  _s();\n  const {\n    data,\n    name\n  } = props;\n  const svgRef = useRef();\n  const colorMap = {\n    \"Military Personnel, Equipment & Facilities\": \"#DFC5B2\",\n    \"Vehicles\": \"#B7BCD6\",\n    \"Transportation Infrastructure\": \"#ACBCC5\",\n    \"Residential Buildings\": \"#5088A1\",\n    \"Manufacturing, Production, and Construction\": \"#998C84\",\n    \"Oil Infrastructure\": \"#D2D9B6\",\n    \"Media and Telecom Facilities\": \"#9194A8\",\n    \"Terrain\": \"#AEAC8D\",\n    \"Water Infrastructure\": \"#8EBADB\",\n    \"Electrical Infrastructure\": \"#78A898\",\n    \"Financial and Banking Facilities\": \"#98D5D3\"\n  };\n  const sortedCategories = Array.from(new Set(data.flatMap(d => d.categories.map(c => c.name)))).sort((a, b) => {\n    const totalA = data.reduce((sum, d) => {\n      const item = d.categories.find(c => c.name === a);\n      return sum + (item ? item.count : 0);\n    }, 0);\n    const totalB = data.reduce((sum, d) => {\n      const item = d.categories.find(c => c.name === b);\n      return sum + (item ? item.count : 0);\n    }, 0);\n    return totalB - totalA;\n  });\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    const margin = {\n      top: 5,\n      right: 20,\n      bottom: 60,\n      left: 60\n    };\n    const width = 570 - margin.left - margin.right;\n    const height = 500 - margin.top - margin.bottom;\n    svg.attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom);\n\n    // Clear only the main chart layer\n    svg.select('g.main').remove();\n    const g = svg.append('g').attr('class', 'main').attr('transform', `translate(${margin.left},${margin.top})`);\n    const dataGroup = g.append('g').attr('class', 'data-group');\n    const defs = svg.select('defs').empty() ? svg.append('defs') : svg.select('defs');\n    const quarters = data.map(d => d.quarter);\n    const xScale = scalePoint().domain(quarters).range([0, width]);\n    const yMax = max(data, d => max(d.categories, c => c.count));\n    const yScale = scaleLinear().domain([0, yMax + 200]).range([height, 0]);\n    g.append('g').call(axisLeft(yScale).ticks(5).tickSize(-width).tickPadding(8)).call(g => g.select('.domain').remove()).call(g => g.selectAll('line').attr('stroke', '#D9D9D9').attr('stroke-width', 0.5)).call(g => g.selectAll('text').attr('x', -12).attr('fill', '#595959').attr('font-size', 12));\n    g.append('g').attr('transform', `translate(0,${height})`).call(axisBottom(xScale)).call(g => g.select('.domain').remove()).call(g => g.selectAll('line').attr('stroke', '#BCBCBC').attr('stroke-opacity', 0.35)).call(g => g.selectAll('text').remove());\n    const xAxisGroup = g.append('g').attr('transform', `translate(0,${height})`);\n    quarters.forEach(q => {\n      const [quarter, year] = q.split(' ');\n      const x = xScale(q);\n      if (x != null) {\n        const group = xAxisGroup.append('g').attr('transform', `translate(${x},0)`);\n        group.append('text').attr('y', 22).attr('text-anchor', 'middle').attr('font-size', 14).style('fill', '#595959').text(quarter);\n        group.append('text').attr('y', 37).attr('font-size', 14).attr('text-anchor', 'middle').style('fill', '#595959').text(year);\n      }\n    });\n    sortedCategories.forEach((category, idx) => {\n      const color = colorMap[category] || '#ccc';\n      const lineData = data.map(d => {\n        const entry = d.categories.find(c => c.name === category);\n        return {\n          quarter: d.quarter,\n          count: entry ? entry.count : 0\n        };\n      });\n      const id = `grad-${idx}`;\n      let gradient = defs.select(`#${id}`);\n      if (gradient.empty()) {\n        gradient = defs.append('linearGradient').attr('id', id).attr('x1', '0%').attr('y1', '0%').attr('x2', '0%').attr('y2', '100%');\n        gradient.append('stop').attr('offset', '0%').attr('stop-color', color).attr('stop-opacity', 0.6);\n        gradient.append('stop').attr('offset', '100%').attr('stop-color', '#ffffff').attr('stop-opacity', 0.8);\n      }\n      const areaPathGenerator = area().x(d => xScale(d.quarter)).y0(height).y1(d => yScale(d.count));\n      const linePathGenerator = line().x(d => xScale(d.quarter)).y(d => yScale(d.count));\n\n      // AREA PATH\n      dataGroup.selectAll(`path.area-${idx}`).data([lineData]).join(enter => enter.append('path').attr('class', `area-${idx}`).attr('fill', `url(#${id})`).attr('fill-opacity', 0.7).attr('stroke', 'none').attr('d', areaPathGenerator), update => update.transition().duration(1000).attr('d', areaPathGenerator));\n\n      // LINE PATH\n      dataGroup.selectAll(`path.line-${idx}`).data([lineData]).join(enter => enter.append('path').attr('class', `line-${idx}`).attr('fill', 'none').attr('stroke', color).attr('stroke-width', 1.5).attr('d', linePathGenerator), update => update.transition().duration(1000).attr('d', linePathGenerator));\n    });\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(ChartContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: [\"Targets, By Total Number in Press Releases per Quarter in \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"#156082\",\n          fontWeight: 600\n        },\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 72\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Legend, {\n      children: sortedCategories.map(name => /*#__PURE__*/_jsxDEV(LegendItem, {\n        color: colorMap[name] || '#ccc',\n        children: name\n      }, name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n}\n_s(LineChart, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n_c5 = LineChart;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Title\");\n$RefreshReg$(_c2, \"ChartContainer\");\n$RefreshReg$(_c3, \"Legend\");\n$RefreshReg$(_c4, \"LegendItem\");\n$RefreshReg$(_c5, \"LineChart\");","map":{"version":3,"names":["React","useEffect","useRef","select","scalePoint","scaleLinear","max","axisLeft","axisBottom","line","area","styled","jsxDEV","_jsxDEV","Title","div","_c","ChartContainer","_c2","Legend","_c3","LegendItem","props","color","_c4","LineChart","_s","data","name","svgRef","colorMap","sortedCategories","Array","from","Set","flatMap","d","categories","map","c","sort","a","b","totalA","reduce","sum","item","find","count","totalB","svg","current","margin","top","right","bottom","left","width","height","attr","remove","g","append","dataGroup","defs","empty","quarters","quarter","xScale","domain","range","yMax","yScale","call","ticks","tickSize","tickPadding","selectAll","xAxisGroup","forEach","q","year","split","x","group","style","text","category","idx","lineData","entry","id","gradient","areaPathGenerator","y0","y1","linePathGenerator","y","join","enter","update","transition","duration","children","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c5","$RefreshReg$"],"sources":["/Users/parkerkaufmann/Code/ylj/src/LineChart.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { select } from 'd3-selection';\nimport { scalePoint, scaleLinear } from 'd3-scale';\nimport { max } from 'd3-array';\nimport { axisLeft, axisBottom } from 'd3-axis';\nimport { line, area } from 'd3-shape';\nimport styled from 'styled-components';\n\nconst Title = styled.div`\ncolor: #000;\ntext-align: center;\nfont-size: 16px;\nfont-style: normal;\nfont-weight: 400;\nline-height: normal;\nmargin: 10px;\n`;\n\nconst ChartContainer = styled.div`\n  width: 570px;\n  color: #333;\n  font-family: 'Bennett Text', Georgia, serif;\n`;\n\nconst Legend = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: .5rem;\n  margin-bottom: 1rem;\n  font-size: 12px;\n`;\n\nconst LegendItem = styled.div`\n  display: flex;\n  align-items: center;\n\n  &::before {\n    content: '';\n    display: inline-block;\n    width: 20px;\n    height: 2px;\n    margin-right: 6px;\n    background-color: ${(props) => props.color || '#000'};\n  }\n`;\n\nexport default function LineChart(props) {\n  const { data, name } = props;\n  const svgRef = useRef();\n\n  const colorMap = {\n    \"Military Personnel, Equipment & Facilities\": \"#DFC5B2\",\n    \"Vehicles\": \"#B7BCD6\",\n    \"Transportation Infrastructure\": \"#ACBCC5\",\n    \"Residential Buildings\": \"#5088A1\",\n    \"Manufacturing, Production, and Construction\": \"#998C84\",\n    \"Oil Infrastructure\": \"#D2D9B6\",\n    \"Media and Telecom Facilities\": \"#9194A8\",\n    \"Terrain\": \"#AEAC8D\",\n    \"Water Infrastructure\": \"#8EBADB\",\n    \"Electrical Infrastructure\": \"#78A898\",\n    \"Financial and Banking Facilities\": \"#98D5D3\"\n  };\n\n  const sortedCategories = Array.from(\n    new Set(data.flatMap(d => d.categories.map(c => c.name)))\n  ).sort((a, b) => {\n    const totalA = data.reduce((sum, d) => {\n      const item = d.categories.find(c => c.name === a);\n      return sum + (item ? item.count : 0);\n    }, 0);\n    const totalB = data.reduce((sum, d) => {\n      const item = d.categories.find(c => c.name === b);\n      return sum + (item ? item.count : 0);\n    }, 0);\n    return totalB - totalA;\n  });\n\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    const margin = { top: 5, right: 20, bottom: 60, left: 60 };\n    const width = 570 - margin.left - margin.right;\n    const height = 500 - margin.top - margin.bottom;\n\n    svg.attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.top + margin.bottom);\n\n    // Clear only the main chart layer\n    svg.select('g.main').remove();\n\n    const g = svg.append('g')\n      .attr('class', 'main')\n      .attr('transform', `translate(${margin.left},${margin.top})`);\n\n    const dataGroup = g.append('g').attr('class', 'data-group');\n\n    const defs = svg.select('defs').empty()\n      ? svg.append('defs')\n      : svg.select('defs');\n\n    const quarters = data.map(d => d.quarter);\n    const xScale = scalePoint().domain(quarters).range([0, width]);\n    const yMax = max(data, d => max(d.categories, c => c.count));\n    const yScale = scaleLinear().domain([0, yMax + 200]).range([height, 0]);\n\n    g.append('g')\n      .call(axisLeft(yScale).ticks(5).tickSize(-width).tickPadding(8))\n      .call(g => g.select('.domain').remove())\n      .call(g => g.selectAll('line').attr('stroke', '#D9D9D9').attr('stroke-width', 0.5))\n      .call(g => g.selectAll('text').attr('x', -12).attr('fill', '#595959').attr('font-size', 12));\n\n    g.append('g')\n      .attr('transform', `translate(0,${height})`)\n      .call(axisBottom(xScale))\n      .call(g => g.select('.domain').remove())\n      .call(g => g.selectAll('line').attr('stroke', '#BCBCBC').attr('stroke-opacity', 0.35))\n      .call(g => g.selectAll('text').remove());\n\n    const xAxisGroup = g.append('g').attr('transform', `translate(0,${height})`);\n    quarters.forEach(q => {\n      const [quarter, year] = q.split(' ');\n      const x = xScale(q);\n      if (x != null) {\n        const group = xAxisGroup.append('g').attr('transform', `translate(${x},0)`);\n        group.append('text')\n          .attr('y', 22)\n          .attr('text-anchor', 'middle')\n          .attr('font-size', 14)\n          .style('fill', '#595959')\n          .text(quarter);\n        group.append('text')\n          .attr('y', 37)\n          .attr('font-size', 14)\n          .attr('text-anchor', 'middle')\n          .style('fill', '#595959')\n          .text(year);\n      }\n    });\n\n    sortedCategories.forEach((category, idx) => {\n      const color = colorMap[category] || '#ccc';\n      const lineData = data.map(d => {\n        const entry = d.categories.find(c => c.name === category);\n        return {\n          quarter: d.quarter,\n          count: entry ? entry.count : 0\n        };\n      });\n\n      const id = `grad-${idx}`;\n      let gradient = defs.select(`#${id}`);\n      if (gradient.empty()) {\n        gradient = defs.append('linearGradient')\n          .attr('id', id)\n          .attr('x1', '0%')\n          .attr('y1', '0%')\n          .attr('x2', '0%')\n          .attr('y2', '100%');\n        gradient.append('stop')\n          .attr('offset', '0%')\n          .attr('stop-color', color)\n          .attr('stop-opacity', 0.6);\n        gradient.append('stop')\n          .attr('offset', '100%')\n          .attr('stop-color', '#ffffff')\n          .attr('stop-opacity', 0.8);\n      }\n\n      const areaPathGenerator = area()\n        .x(d => xScale(d.quarter))\n        .y0(height)\n        .y1(d => yScale(d.count));\n\n      const linePathGenerator = line()\n        .x(d => xScale(d.quarter))\n        .y(d => yScale(d.count));\n\n      // AREA PATH\n      dataGroup.selectAll(`path.area-${idx}`)\n        .data([lineData])\n        .join(\n          enter => enter.append('path')\n            .attr('class', `area-${idx}`)\n            .attr('fill', `url(#${id})`)\n            .attr('fill-opacity', 0.7)\n            .attr('stroke', 'none')\n            .attr('d', areaPathGenerator),\n          update => update.transition().duration(1000).attr('d', areaPathGenerator)\n        );\n\n      // LINE PATH\n      dataGroup.selectAll(`path.line-${idx}`)\n        .data([lineData])\n        .join(\n          enter => enter.append('path')\n            .attr('class', `line-${idx}`)\n            .attr('fill', 'none')\n            .attr('stroke', color)\n            .attr('stroke-width', 1.5)\n            .attr('d', linePathGenerator),\n          update => update.transition().duration(1000).attr('d', linePathGenerator)\n        );\n    });\n  }, [data]);\n\n  return (\n    <ChartContainer>\n      <Title>Targets, By Total Number in Press Releases per Quarter in <span style={{ color: \"#156082\", fontWeight: 600 }}>{name}</span> </Title>\n      <Legend>\n        {sortedCategories.map((name) => (\n          <LegendItem key={name} color={colorMap[name] || '#ccc'}>\n            {name}\n          </LegendItem>\n        ))}\n      </Legend>\n      <svg ref={svgRef}></svg>\n    </ChartContainer>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}