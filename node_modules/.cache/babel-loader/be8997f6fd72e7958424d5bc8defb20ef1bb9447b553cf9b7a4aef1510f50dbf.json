{"ast":null,"code":"var _jsxFileName = \"/Users/parkerkaufmann/Code/ylj/src/CategoryBubbleChart.jsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport data from './mosul_targets_by_quarter.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GridWrapper = styled.div`\n  padding: 2rem;\n  font-family: 'Bennett Text', Georgia, serif;\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n`;\n_c = GridWrapper;\nconst CategoryRow = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n_c2 = CategoryRow;\nconst CategoryLabel = styled.div`\n  font-size: 20px;\n  font-weight: 500;\n  margin-bottom: 0.5rem;\n`;\n_c3 = CategoryLabel;\nconst QuarterRow = styled.div`\n  display: flex;\n  align-items: flex-end;\n  gap: 6px;\n`;\n_c4 = QuarterRow;\nconst CircleContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 40px;\n`;\n_c5 = CircleContainer;\nconst Circle = styled.div`\n  border-radius: 50%;\n  background-color: ${({\n  color\n}) => color};\n  opacity: 0.2;\n  width: ${({\n  size\n}) => size}px;\n  height: ${({\n  size\n}) => size}px;\n`;\n_c6 = Circle;\nconst QuarterLabel = styled.div`\n  font-size: 10px;\n  text-align: center;\n  margin-top: 0.25rem;\n`;\n_c7 = QuarterLabel;\nconst CountLabel = styled.div`\n  font-size: 10px;\n  margin-top: 2px;\n  color: #333;\n`;\n_c8 = CountLabel;\nconst colorMap = {\n  \"Military Personnel, Equipment & Facilities\": \"#DFC5B2\",\n  \"Vehicles\": \"#B7BCD6\",\n  \"Transportation Infrastructure\": \"#ACBCC5\",\n  \"Residential Buildings\": \"#5088A1\",\n  \"Manufacturing, Production, and Construction\": \"#998C84\",\n  \"Oil Infrastructure\": \"#D2D9B6\",\n  \"Media and Telecom Facilities\": \"#9194A8\",\n  \"Terrain\": \"#AEAC8D\",\n  \"Water Infrastructure\": \"#8EBADB\",\n  \"Electrical Infrastructure\": \"#78A898\",\n  \"Financial and Banking Facilities\": \"#98D5D3\"\n};\nconst allCounts = data.flatMap(d => d.categories.map(c => c.count));\nconst minCount = Math.min(...allCounts);\nconst maxCount = Math.max(...allCounts);\nconst scaleSize = count => {\n  const minSize = 8;\n  const maxSize = 80;\n  return (count - minCount) / (maxCount - minCount) * (maxSize - minSize) + minSize;\n};\nexport default function CategoryBubbleChart() {\n  const categories = Array.from(new Set(data.flatMap(d => d.categories.map(c => c.name))));\n  return /*#__PURE__*/_jsxDEV(GridWrapper, {\n    children: categories.map(category => /*#__PURE__*/_jsxDEV(CategoryRow, {\n      children: [/*#__PURE__*/_jsxDEV(CategoryLabel, {\n        children: category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(QuarterRow, {\n        children: data.map(d => {\n          const found = d.categories.find(c => c.name === category);\n          const count = found ? found.count : 0;\n          const size = scaleSize(count);\n          const label = d.quarter.split(\" \");\n          return /*#__PURE__*/_jsxDEV(CircleContainer, {\n            children: [/*#__PURE__*/_jsxDEV(QuarterLabel, {\n              children: label[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(QuarterLabel, {\n              children: label[1]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Circle, {\n              size: size,\n              color: colorMap[category] || '#ccc'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(CountLabel, {\n              children: count\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 19\n            }, this)]\n          }, `${category}-${d.quarter}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, category, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_c9 = CategoryBubbleChart;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"GridWrapper\");\n$RefreshReg$(_c2, \"CategoryRow\");\n$RefreshReg$(_c3, \"CategoryLabel\");\n$RefreshReg$(_c4, \"QuarterRow\");\n$RefreshReg$(_c5, \"CircleContainer\");\n$RefreshReg$(_c6, \"Circle\");\n$RefreshReg$(_c7, \"QuarterLabel\");\n$RefreshReg$(_c8, \"CountLabel\");\n$RefreshReg$(_c9, \"CategoryBubbleChart\");","map":{"version":3,"names":["React","styled","data","jsxDEV","_jsxDEV","GridWrapper","div","_c","CategoryRow","_c2","CategoryLabel","_c3","QuarterRow","_c4","CircleContainer","_c5","Circle","color","size","_c6","QuarterLabel","_c7","CountLabel","_c8","colorMap","allCounts","flatMap","d","categories","map","c","count","minCount","Math","min","maxCount","max","scaleSize","minSize","maxSize","CategoryBubbleChart","Array","from","Set","name","children","category","fileName","_jsxFileName","lineNumber","columnNumber","found","find","label","quarter","split","_c9","$RefreshReg$"],"sources":["/Users/parkerkaufmann/Code/ylj/src/CategoryBubbleChart.jsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport data from './mosul_targets_by_quarter.json';\n\nconst GridWrapper = styled.div`\n  padding: 2rem;\n  font-family: 'Bennett Text', Georgia, serif;\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n`;\n\nconst CategoryRow = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst CategoryLabel = styled.div`\n  font-size: 20px;\n  font-weight: 500;\n  margin-bottom: 0.5rem;\n`;\n\nconst QuarterRow = styled.div`\n  display: flex;\n  align-items: flex-end;\n  gap: 6px;\n`;\n\nconst CircleContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 40px;\n`;\n\nconst Circle = styled.div`\n  border-radius: 50%;\n  background-color: ${({ color }) => color};\n  opacity: 0.2;\n  width: ${({ size }) => size}px;\n  height: ${({ size }) => size}px;\n`;\n\nconst QuarterLabel = styled.div`\n  font-size: 10px;\n  text-align: center;\n  margin-top: 0.25rem;\n`;\n\nconst CountLabel = styled.div`\n  font-size: 10px;\n  margin-top: 2px;\n  color: #333;\n`;\n\nconst colorMap = {\n  \"Military Personnel, Equipment & Facilities\": \"#DFC5B2\",\n  \"Vehicles\": \"#B7BCD6\",\n  \"Transportation Infrastructure\": \"#ACBCC5\",\n  \"Residential Buildings\": \"#5088A1\",\n  \"Manufacturing, Production, and Construction\": \"#998C84\",\n  \"Oil Infrastructure\": \"#D2D9B6\",\n  \"Media and Telecom Facilities\": \"#9194A8\",\n  \"Terrain\": \"#AEAC8D\",\n  \"Water Infrastructure\": \"#8EBADB\",\n  \"Electrical Infrastructure\": \"#78A898\",\n  \"Financial and Banking Facilities\": \"#98D5D3\"\n};\n\nconst allCounts = data.flatMap(d => d.categories.map(c => c.count));\nconst minCount = Math.min(...allCounts);\nconst maxCount = Math.max(...allCounts);\n\nconst scaleSize = (count) => {\n  const minSize = 8;\n  const maxSize = 80;\n  return ((count - minCount) / (maxCount - minCount)) * (maxSize - minSize) + minSize;\n};\n\nexport default function CategoryBubbleChart() {\n  const categories = Array.from(\n    new Set(data.flatMap(d => d.categories.map(c => c.name)))\n  );\n\n  return (\n    <GridWrapper>\n      {categories.map((category) => (\n        <CategoryRow key={category}>\n          <CategoryLabel>{category}</CategoryLabel>\n          <QuarterRow>\n            {data.map((d) => {\n              const found = d.categories.find(c => c.name === category);\n              const count = found ? found.count : 0;\n              const size = scaleSize(count);\n              const label = d.quarter.split(\" \");\n              return (\n                <CircleContainer key={`${category}-${d.quarter}`}>\n                  <QuarterLabel>{label[0]}</QuarterLabel>\n                  <QuarterLabel>{label[1]}</QuarterLabel>\n                  <Circle size={size} color={colorMap[category] || '#ccc'} />\n                  <CountLabel>{count}</CountLabel>\n\n                </CircleContainer>\n              );\n            })}\n          </QuarterRow>\n        </CategoryRow>\n      ))}\n    </GridWrapper>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}