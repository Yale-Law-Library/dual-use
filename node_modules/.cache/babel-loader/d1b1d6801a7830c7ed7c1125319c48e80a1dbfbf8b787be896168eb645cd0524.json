{"ast":null,"code":"var _jsxFileName = \"/Users/parkerkaufmann/Code/ylj/src/CategoryBubbleChart.jsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { scaleLinear } from 'd3-scale';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GridWrapper = styled.div`\n  padding: 2rem;\n  font-family: 'Bennett Text', Georgia, serif;\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n  width:570px;\n`;\n_c = GridWrapper;\nconst CategoryRow = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n_c2 = CategoryRow;\nconst CategoryLabel = styled.div`\n  font-size: 16px;\n  font-weight: 500;\n  padding-bottom: ${({\n  offset\n}) => offset + 12}px;\n  text-align: start;\n`;\n_c3 = CategoryLabel;\nconst QuarterRow = styled.div`\n  display: flex;\n  align-items: flex-end;\n`;\n_c4 = QuarterRow;\nconst CircleContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 40px;\n`;\n_c5 = CircleContainer;\nconst QuarterLabel = styled.div`\n  font-size: 12px;\n  text-align: center;\n  padding-bottom: ${({\n  offset\n}) => offset + 6}px;\n     transition: padding-bottom 1s ease-in-out\n`;\n_c6 = QuarterLabel;\nconst CountLabel = styled.div`\n  font-size: 12px;\n  margin-top: ${({\n  offset\n}) => offset + 6}px;\n  color: #333;\n   transition: margin-top 1s ease-in-out\n`;\n_c7 = CountLabel;\nconst CircleStack = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n_c8 = CircleStack;\nconst BlurredCircle = styled.div`\n  position: absolute;\n  border-radius: 50%;\n  background-color: ${({\n  color\n}) => color};\n  opacity: 0.7;\n  filter: blur(3px);\n  width: ${({\n  size\n}) => size}px;\n  height: ${({\n  size\n}) => size}px;\n  transition: height 1s ease-in, width 1s ease-in-out\n`;\n_c9 = BlurredCircle;\nconst OutlineCircle = styled.div`\n  position: absolute;\n  border-radius: 50%;\n  border: 1px solid ${({\n  color\n}) => color};\n  opacity: 0.7;\n  width: ${({\n  size\n}) => size}px;\n  height: ${({\n  size\n}) => size}px;\n  transition: height 1s ease-in, width 1s ease-in-out\n`;\n_c10 = OutlineCircle;\nconst CenterDot = styled.div`\n  position: absolute;\n  width: 6px;\n  height: 6px;\n  background-color: ${({\n  color\n}) => color};\n  border-radius: 50%;\n  filter: brightness(.85);\n`;\n_c11 = CenterDot;\nconst colorMap = {\n  \"Military Personnel, Equipment & Facilities\": \"#DFC5B2\",\n  \"Vehicles\": \"#B7BCD6\",\n  \"Transportation Infrastructure\": \"#ACBCC5\",\n  \"Residential Buildings\": \"#5088A1\",\n  \"Manufacturing, Production, and Construction\": \"#998C84\",\n  \"Oil Infrastructure\": \"#D2D9B6\",\n  \"Media and Telecom Facilities\": \"#9194A8\",\n  \"Terrain\": \"#AEAC8D\",\n  \"Water Infrastructure\": \"#8EBADB\",\n  \"Electrical Infrastructure\": \"#78A898\",\n  \"Financial and Banking Facilities\": \"#98D5D3\"\n};\nexport default function CategoryBubbleChart(props) {\n  const {\n    data,\n    sizeScale,\n    hoveredQuarter,\n    setHoveredQuarter,\n    hoverCategories\n  } = props;\n  const categories = Array.from(new Set(data.flatMap(d => d.categories.map(c => c.name)))).sort((a, b) => {\n    const totalA = data.reduce((sum, d) => {\n      const item = d.categories.find(c => c.name === a);\n      return sum + (item ? item.count : 0);\n    }, 0);\n    const totalB = data.reduce((sum, d) => {\n      const item = d.categories.find(c => c.name === b);\n      return sum + (item ? item.count : 0);\n    }, 0);\n    return totalB - totalA;\n  });\n  const maxRadiiByCategory = {};\n  categories.forEach(cat => {\n    const maxCount = Math.max(...data.map(d => {\n      const found = d.categories.find(c => c.name === cat);\n      return found ? found.count : 0;\n    }));\n    maxRadiiByCategory[cat] = sizeScale(maxCount);\n  });\n  return /*#__PURE__*/_jsxDEV(GridWrapper, {\n    children: categories.filter(c => hoverCategories.length === 0 || hoverCategories.includes(c)).map(category => {\n      const maxCategorySize = Math.max(...data.map(d => {\n        const found = d.categories.find(c => c.name === category);\n        return found ? sizeScale(found.count) : 0;\n      }));\n      return /*#__PURE__*/_jsxDEV(CategoryRow, {\n        children: [/*#__PURE__*/_jsxDEV(CategoryLabel, {\n          offset: 10,\n          children: category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(QuarterRow, {\n          children: data.map(d => {\n            const found = d.categories.find(c => c.name === category);\n            const count = found ? found.count : 0;\n            const size = sizeScale(count);\n            const label = d.quarter.split(\" \");\n            const color = colorMap[category] || '#ccc';\n            return /*#__PURE__*/_jsxDEV(CircleContainer, {\n              style: {\n                opacity: hoveredQuarter === \"\" || hoveredQuarter === d.quarter ? 1 : .3\n              },\n              onMouseMove: () => setHoveredQuarter(d.quarter),\n              onMouseLeave: () => setHoveredQuarter(\"\"),\n              children: [/*#__PURE__*/_jsxDEV(QuarterLabel, {\n                offset: -5,\n                children: label[0]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(QuarterLabel, {\n                offset: maxRadiiByCategory[category] / 2,\n                children: label[1]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(CircleStack, {\n                children: [/*#__PURE__*/_jsxDEV(BlurredCircle, {\n                  size: size,\n                  color: color\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(OutlineCircle, {\n                  size: size,\n                  color: color\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(CenterDot, {\n                  color: color\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(CountLabel, {\n                offset: maxRadiiByCategory[category] / 2,\n                children: count\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 21\n              }, this)]\n            }, `${category}-${d.quarter}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)]\n      }, category, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n}\n_c12 = CategoryBubbleChart;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12;\n$RefreshReg$(_c, \"GridWrapper\");\n$RefreshReg$(_c2, \"CategoryRow\");\n$RefreshReg$(_c3, \"CategoryLabel\");\n$RefreshReg$(_c4, \"QuarterRow\");\n$RefreshReg$(_c5, \"CircleContainer\");\n$RefreshReg$(_c6, \"QuarterLabel\");\n$RefreshReg$(_c7, \"CountLabel\");\n$RefreshReg$(_c8, \"CircleStack\");\n$RefreshReg$(_c9, \"BlurredCircle\");\n$RefreshReg$(_c10, \"OutlineCircle\");\n$RefreshReg$(_c11, \"CenterDot\");\n$RefreshReg$(_c12, \"CategoryBubbleChart\");","map":{"version":3,"names":["React","styled","scaleLinear","jsxDEV","_jsxDEV","GridWrapper","div","_c","CategoryRow","_c2","CategoryLabel","offset","_c3","QuarterRow","_c4","CircleContainer","_c5","QuarterLabel","_c6","CountLabel","_c7","CircleStack","_c8","BlurredCircle","color","size","_c9","OutlineCircle","_c10","CenterDot","_c11","colorMap","CategoryBubbleChart","props","data","sizeScale","hoveredQuarter","setHoveredQuarter","hoverCategories","categories","Array","from","Set","flatMap","d","map","c","name","sort","a","b","totalA","reduce","sum","item","find","count","totalB","maxRadiiByCategory","forEach","cat","maxCount","Math","max","found","children","filter","length","includes","category","maxCategorySize","fileName","_jsxFileName","lineNumber","columnNumber","label","quarter","split","style","opacity","onMouseMove","onMouseLeave","_c12","$RefreshReg$"],"sources":["/Users/parkerkaufmann/Code/ylj/src/CategoryBubbleChart.jsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { scaleLinear } from 'd3-scale';\n\nconst GridWrapper = styled.div`\n  padding: 2rem;\n  font-family: 'Bennett Text', Georgia, serif;\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n  width:570px;\n`;\n\nconst CategoryRow = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst CategoryLabel = styled.div`\n  font-size: 16px;\n  font-weight: 500;\n  padding-bottom: ${({ offset }) => offset + 12}px;\n  text-align: start;\n`;\n\nconst QuarterRow = styled.div`\n  display: flex;\n  align-items: flex-end;\n`;\n\nconst CircleContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 40px;\n`;\n\nconst QuarterLabel = styled.div`\n  font-size: 12px;\n  text-align: center;\n  padding-bottom: ${({ offset }) => offset + 6}px;\n     transition: padding-bottom 1s ease-in-out\n`;\n\nconst CountLabel = styled.div`\n  font-size: 12px;\n  margin-top: ${({ offset }) => offset + 6}px;\n  color: #333;\n   transition: margin-top 1s ease-in-out\n`;\n\n\nconst CircleStack = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst BlurredCircle = styled.div`\n  position: absolute;\n  border-radius: 50%;\n  background-color: ${({ color }) => color};\n  opacity: 0.7;\n  filter: blur(3px);\n  width: ${({ size }) => size}px;\n  height: ${({ size }) => size}px;\n  transition: height 1s ease-in, width 1s ease-in-out\n`;\n\nconst OutlineCircle = styled.div`\n  position: absolute;\n  border-radius: 50%;\n  border: 1px solid ${({ color }) => color};\n  opacity: 0.7;\n  width: ${({ size }) => size}px;\n  height: ${({ size }) => size}px;\n  transition: height 1s ease-in, width 1s ease-in-out\n`;\n\nconst CenterDot = styled.div`\n  position: absolute;\n  width: 6px;\n  height: 6px;\n  background-color: ${({ color }) => color};\n  border-radius: 50%;\n  filter: brightness(.85);\n`;\n\nconst colorMap = {\n  \"Military Personnel, Equipment & Facilities\": \"#DFC5B2\",\n  \"Vehicles\": \"#B7BCD6\",\n  \"Transportation Infrastructure\": \"#ACBCC5\",\n  \"Residential Buildings\": \"#5088A1\",\n  \"Manufacturing, Production, and Construction\": \"#998C84\",\n  \"Oil Infrastructure\": \"#D2D9B6\",\n  \"Media and Telecom Facilities\": \"#9194A8\",\n  \"Terrain\": \"#AEAC8D\",\n  \"Water Infrastructure\": \"#8EBADB\",\n  \"Electrical Infrastructure\": \"#78A898\",\n  \"Financial and Banking Facilities\": \"#98D5D3\"\n};\n\n\n\nexport default function CategoryBubbleChart(props) {\n  const { data, sizeScale, hoveredQuarter, setHoveredQuarter, hoverCategories } = props;\n  const categories = Array.from(\n    new Set(data.flatMap(d => d.categories.map(c => c.name)))\n  ).sort((a, b) => {\n    const totalA = data.reduce((sum, d) => {\n      const item = d.categories.find(c => c.name === a);\n      return sum + (item ? item.count : 0);\n    }, 0);\n    const totalB = data.reduce((sum, d) => {\n      const item = d.categories.find(c => c.name === b);\n      return sum + (item ? item.count : 0);\n    }, 0);\n    return totalB - totalA;\n  });\n\n  const maxRadiiByCategory = {};\n  categories.forEach(cat => {\n    const maxCount = Math.max(\n      ...data.map(d => {\n        const found = d.categories.find(c => c.name === cat);\n        return found ? found.count : 0;\n      })\n    );\n    maxRadiiByCategory[cat] = sizeScale(maxCount);\n  });\n\n  return (\n    <GridWrapper>\n      {categories.filter((c) => hoverCategories.length === 0 || hoverCategories.includes(c)).map((category) => {\n        const maxCategorySize = Math.max(\n          ...data.map(d => {\n            const found = d.categories.find(c => c.name === category);\n            return found ? sizeScale(found.count) : 0;\n          })\n        );\n\n        return (\n          <CategoryRow key={category}>\n            <CategoryLabel offset={10}>{category}</CategoryLabel>\n            <QuarterRow>\n              {data.map((d) => {\n                const found = d.categories.find(c => c.name === category);\n                const count = found ? found.count : 0;\n                const size = sizeScale(count);\n                const label = d.quarter.split(\" \");\n                const color = colorMap[category] || '#ccc';\n                return (\n                  <CircleContainer style={{ opacity: hoveredQuarter === \"\" || hoveredQuarter === d.quarter ? 1 : .3 }} onMouseMove={() => setHoveredQuarter(d.quarter)} onMouseLeave={() => setHoveredQuarter(\"\")} key={`${category}-${d.quarter}`}>\n                    <QuarterLabel offset={-5}>{label[0]}</QuarterLabel>\n                    <QuarterLabel offset={maxRadiiByCategory[category] / 2}>{label[1]}</QuarterLabel>\n                    <CircleStack >\n                      <BlurredCircle size={size} color={color} />\n                      <OutlineCircle size={size} color={color} />\n                      <CenterDot color={color} />\n                    </CircleStack>\n                    <CountLabel offset={maxRadiiByCategory[category] / 2}>{count}</CountLabel>\n                  </CircleContainer>\n                );\n              })}\n            </QuarterRow>\n          </CategoryRow>\n        );\n      })}\n    </GridWrapper>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}