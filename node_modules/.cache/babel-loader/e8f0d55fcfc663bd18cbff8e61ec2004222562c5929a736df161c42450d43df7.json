{"ast":null,"code":"var _jsxFileName = \"/Users/parkerkaufmann/Code/ylj/src/LineChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { select } from 'd3-selection';\nimport { scalePoint, scaleLinear } from 'd3-scale';\nimport { max } from 'd3-array';\nimport { axisLeft, axisBottom } from 'd3-axis';\nimport { line, area } from 'd3-shape';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Title = styled.div`\ncolor: #000;\ntext-align: center;\nfont-size: 16px;\nfont-style: normal;\nfont-weight: 400;\nline-height: normal;\nmargin: 10px\n`;\n_c = Title;\nconst ChartContainer = styled.div`\n  width: 570px;\n  color: #333;\n  font-family: 'Bennett Text', Georgia, serif;\n`;\n_c2 = ChartContainer;\nconst Legend = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: .5rem;\n  margin-bottom: 1rem;\n  font-size: 12px;\n`;\n_c3 = Legend;\nconst LegendItem = styled.div`\n  display: flex;\n  align-items: center;\n\n  &::before {\n    content: '';\n    display: inline-block;\n    width: 20px;\n    height: 2px;\n    margin-right: 6px;\n    background-color: ${props => props.color || '#000'};\n  }\n`;\n_c4 = LegendItem;\nexport default function LineChart(props) {\n  _s();\n  const {\n    data,\n    name\n  } = props;\n  const svgRef = useRef();\n  const colorMap = {\n    \"Military Personnel, Equipment & Facilities\": \"#DFC5B2\",\n    \"Vehicles\": \"#B7BCD6\",\n    \"Transportation Infrastructure\": \"#ACBCC5\",\n    \"Residential Buildings\": \"#5088A1\",\n    \"Manufacturing, Production, and Construction\": \"#998C84\",\n    \"Oil Infrastructure\": \"#D2D9B6\",\n    \"Media and Telecom Facilities\": \"#9194A8\",\n    \"Terrain\": \"#AEAC8D\",\n    \"Water Infrastructure\": \"#8EBADB\",\n    \"Electrical Infrastructure\": \"#78A898\",\n    \"Financial and Banking Facilities\": \"#98D5D3\"\n  };\n  const sortedCategories = Array.from(new Set(data.flatMap(d => d.categories.map(c => c.name)))).sort((a, b) => {\n    const totalA = data.reduce((sum, d) => {\n      const item = d.categories.find(c => c.name === a);\n      return sum + (item ? item.count : 0);\n    }, 0);\n    const totalB = data.reduce((sum, d) => {\n      const item = d.categories.find(c => c.name === b);\n      return sum + (item ? item.count : 0);\n    }, 0);\n    return totalB - totalA;\n  });\n  //.filter((category) => Object.keys(colorMap).includes(category));\n\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    svg.selectAll('*').remove();\n    const margin = {\n      top: 5,\n      right: 20,\n      bottom: 60,\n      left: 60\n    };\n    const width = 570 - margin.left - margin.right;\n    const height = 500 - margin.top - margin.bottom;\n    const g = svg.attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('transform', `translate(${margin.left},${margin.top})`);\n    const defs = svg.append('defs');\n    const quarters = data.map(d => d.quarter);\n    const colorMap = {\n      \"Military Personnel, Equipment & Facilities\": \"#DFC5B2\",\n      \"Vehicles\": \"#B7BCD6\",\n      \"Transportation Infrastructure\": \"#ACBCC5\",\n      \"Residential Buildings\": \"#5088A1\",\n      \"Manufacturing, Production, and Construction\": \"#998C84\",\n      \"Oil Infrastructure\": \"#D2D9B6\",\n      \"Media and Telecom Facilities\": \"#9194A8\",\n      \"Terrain\": \"#AEAC8D\",\n      \"Water Infrastructure\": \"#8EBADB\",\n      \"Electrical Infrastructure\": \"#78A898\",\n      \"Financial and Banking Facilities\": \"#98D5D3\"\n    };\n    const xScale = scalePoint().domain(quarters).range([0, width]);\n    const yMax = max(data, d => max(d.categories, c => c.count));\n    const yScale = scaleLinear().domain([0, yMax + 200]).range([height, 0]);\n    g.append('g').call(axisLeft(yScale).ticks(5).tickSize(-width).tickPadding(8)).call(g => g.select('.domain').remove()).call(g => g.selectAll('line').attr('stroke', '#D9D9D9').attr('stroke-width', 0.5)).call(g => g.selectAll('text').attr('x', -12).attr(\"color\", \"#595959\").attr(\"font-size\", 12));\n    const xAxis = g.append('g').attr('transform', `translate(0,${height})`).call(axisBottom(xScale)).call(g => g.select('.domain').remove()).call(g => g.selectAll('line').attr('stroke', '#BCBCBC').attr('stroke-opacity', 0.35)).call(g => g.selectAll('text').remove());\n\n    // Custom stacked quarter/year text labels\n    const xAxisGroup = g.append('g').attr('transform', `translate(0,${height})`);\n    quarters.forEach((q, i) => {\n      const [quarter, year] = q.split(\" \");\n      const x = xScale(q);\n      if (x != null) {\n        const group = xAxisGroup.append(\"g\").attr(\"transform\", `translate(${x},0)`);\n        group.append(\"text\").attr(\"y\", 22).attr(\"text-anchor\", \"middle\").attr(\"font-size\", 14).style(\"fill\", \"#595959\").text(quarter);\n        group.append(\"text\").attr(\"y\", 37).attr(\"font-size\", 14).attr(\"text-anchor\", \"middle\").style(\"fill\", \"#595959\").text(year);\n      }\n    });\n    sortedCategories.forEach((category, idx) => {\n      const lineData = data.map(d => {\n        const entry = d.categories.find(c => c.name === category);\n        return {\n          quarter: d.quarter,\n          count: entry ? entry.count : 0\n        };\n      });\n      const id = `grad-${idx}`;\n      const color = colorMap[category] || '#ccc';\n      const gradient = defs.append('linearGradient').attr('id', id).attr('x1', '0%').attr('y1', '0%').attr('x2', '0%').attr('y2', '100%');\n      gradient.append('stop').attr('offset', '0%').attr('stop-color', color).attr('stop-opacity', 0.6);\n      gradient.append('stop').attr('offset', '100%').attr('stop-color', '#ffffff').attr('stop-opacity', 0.8);\n      const areaPath = area().x(d => xScale(d.quarter)).y0(height).y1(d => yScale(d.count));\n      g.append('path').datum(lineData).attr('fill', `url(#${id})`).attr('fill-opacity', 0.7).attr('stroke', 'none').attr('d', areaPath);\n      const linePath = line().x(d => xScale(d.quarter)).y(d => yScale(d.count));\n      g.append('path').datum(lineData).attr('fill', 'none').attr('stroke', color).attr('stroke-width', 1.5).attr('d', linePath);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ChartContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: [\"Targets, By Total Number in Press Releases per Quarter in \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"#156082\",\n          fontWeight: 600\n        },\n        children: \"Mosul Iraq\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 72\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Legend, {\n      children: sortedCategories.map(name => /*#__PURE__*/_jsxDEV(LegendItem, {\n        color: colorMap[name] || '#ccc',\n        children: name\n      }, name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n}\n_s(LineChart, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n_c5 = LineChart;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Title\");\n$RefreshReg$(_c2, \"ChartContainer\");\n$RefreshReg$(_c3, \"Legend\");\n$RefreshReg$(_c4, \"LegendItem\");\n$RefreshReg$(_c5, \"LineChart\");","map":{"version":3,"names":["React","useEffect","useRef","select","scalePoint","scaleLinear","max","axisLeft","axisBottom","line","area","styled","jsxDEV","_jsxDEV","Title","div","_c","ChartContainer","_c2","Legend","_c3","LegendItem","props","color","_c4","LineChart","_s","data","name","svgRef","colorMap","sortedCategories","Array","from","Set","flatMap","d","categories","map","c","sort","a","b","totalA","reduce","sum","item","find","count","totalB","svg","current","selectAll","remove","margin","top","right","bottom","left","width","height","g","attr","append","defs","quarters","quarter","xScale","domain","range","yMax","yScale","call","ticks","tickSize","tickPadding","xAxis","xAxisGroup","forEach","q","i","year","split","x","group","style","text","category","idx","lineData","entry","id","gradient","areaPath","y0","y1","datum","linePath","y","children","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c5","$RefreshReg$"],"sources":["/Users/parkerkaufmann/Code/ylj/src/LineChart.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { select } from 'd3-selection';\nimport { scalePoint, scaleLinear } from 'd3-scale';\nimport { max } from 'd3-array';\nimport { axisLeft, axisBottom } from 'd3-axis';\nimport { line, area } from 'd3-shape';\nimport styled from 'styled-components';\n\nconst Title = styled.div`\ncolor: #000;\ntext-align: center;\nfont-size: 16px;\nfont-style: normal;\nfont-weight: 400;\nline-height: normal;\nmargin: 10px\n`;\n\nconst ChartContainer = styled.div`\n  width: 570px;\n  color: #333;\n  font-family: 'Bennett Text', Georgia, serif;\n`;\n\nconst Legend = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: .5rem;\n  margin-bottom: 1rem;\n  font-size: 12px;\n`;\n\nconst LegendItem = styled.div`\n  display: flex;\n  align-items: center;\n\n  &::before {\n    content: '';\n    display: inline-block;\n    width: 20px;\n    height: 2px;\n    margin-right: 6px;\n    background-color: ${(props) => props.color || '#000'};\n  }\n`;\n\nexport default function LineChart(props) {\n  const { data, name } = props;\n  const svgRef = useRef();\n\n  const colorMap = {\n    \"Military Personnel, Equipment & Facilities\": \"#DFC5B2\",\n    \"Vehicles\": \"#B7BCD6\",\n    \"Transportation Infrastructure\": \"#ACBCC5\",\n    \"Residential Buildings\": \"#5088A1\",\n    \"Manufacturing, Production, and Construction\": \"#998C84\",\n    \"Oil Infrastructure\": \"#D2D9B6\",\n    \"Media and Telecom Facilities\": \"#9194A8\",\n    \"Terrain\": \"#AEAC8D\",\n    \"Water Infrastructure\": \"#8EBADB\",\n    \"Electrical Infrastructure\": \"#78A898\",\n    \"Financial and Banking Facilities\": \"#98D5D3\"\n  };\n\n\n  const sortedCategories = Array.from(\n    new Set(data.flatMap(d => d.categories.map(c => c.name)))\n  ).sort((a, b) => {\n    const totalA = data.reduce((sum, d) => {\n      const item = d.categories.find(c => c.name === a);\n      return sum + (item ? item.count : 0);\n    }, 0);\n    const totalB = data.reduce((sum, d) => {\n      const item = d.categories.find(c => c.name === b);\n      return sum + (item ? item.count : 0);\n    }, 0);\n    return totalB - totalA;\n  });\n  //.filter((category) => Object.keys(colorMap).includes(category));\n\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    svg.selectAll('*').remove();\n\n    const margin = { top: 5, right: 20, bottom: 60, left: 60 };\n    const width = 570 - margin.left - margin.right;\n    const height = 500 - margin.top - margin.bottom;\n\n\n\n    const g = svg\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.top + margin.bottom)\n      .append('g')\n      .attr('transform', `translate(${margin.left},${margin.top})`);\n\n    const defs = svg.append('defs');\n    const quarters = data.map((d) => d.quarter);\n\n    const colorMap = {\n      \"Military Personnel, Equipment & Facilities\": \"#DFC5B2\",\n      \"Vehicles\": \"#B7BCD6\",\n      \"Transportation Infrastructure\": \"#ACBCC5\",\n      \"Residential Buildings\": \"#5088A1\",\n      \"Manufacturing, Production, and Construction\": \"#998C84\",\n      \"Oil Infrastructure\": \"#D2D9B6\",\n      \"Media and Telecom Facilities\": \"#9194A8\",\n      \"Terrain\": \"#AEAC8D\",\n      \"Water Infrastructure\": \"#8EBADB\",\n      \"Electrical Infrastructure\": \"#78A898\",\n      \"Financial and Banking Facilities\": \"#98D5D3\"\n    };\n\n\n    const xScale = scalePoint().domain(quarters).range([0, width]);\n\n    const yMax = max(data, (d) => max(d.categories, (c) => c.count));\n    const yScale = scaleLinear().domain([0, yMax + 200]).range([height, 0]);\n\n    g.append('g')\n      .call(axisLeft(yScale).ticks(5).tickSize(-width).tickPadding(8))\n      .call(g => g.select('.domain').remove())\n      .call(g => g.selectAll('line').attr('stroke', '#D9D9D9').attr('stroke-width', 0.5))\n      .call(g => g.selectAll('text').attr('x', -12).attr(\"color\", \"#595959\").attr(\"font-size\", 12));\n\n    const xAxis = g.append('g')\n      .attr('transform', `translate(0,${height})`)\n      .call(axisBottom(xScale))\n      .call(g => g.select('.domain').remove())\n      .call(g => g.selectAll('line').attr('stroke', '#BCBCBC').attr('stroke-opacity', 0.35))\n      .call(g => g.selectAll('text').remove());\n\n    // Custom stacked quarter/year text labels\n    const xAxisGroup = g.append('g')\n      .attr('transform', `translate(0,${height})`);\n\n    quarters.forEach((q, i) => {\n      const [quarter, year] = q.split(\" \");\n      const x = xScale(q);\n      if (x != null) {\n        const group = xAxisGroup.append(\"g\")\n          .attr(\"transform\", `translate(${x},0)`);\n\n        group.append(\"text\")\n          .attr(\"y\", 22)\n          .attr(\"text-anchor\", \"middle\")\n          .attr(\"font-size\", 14)\n          .style(\"fill\", \"#595959\")\n          .text(quarter);\n\n        group.append(\"text\")\n          .attr(\"y\", 37)\n          .attr(\"font-size\", 14)\n          .attr(\"text-anchor\", \"middle\")\n          .style(\"fill\", \"#595959\")\n          .text(year);\n      }\n    });\n\n    sortedCategories.forEach((category, idx) => {\n      const lineData = data.map((d) => {\n        const entry = d.categories.find((c) => c.name === category);\n        return {\n          quarter: d.quarter,\n          count: entry ? entry.count : 0\n        };\n      });\n\n      const id = `grad-${idx}`;\n      const color = colorMap[category] || '#ccc';\n\n      const gradient = defs.append('linearGradient')\n        .attr('id', id)\n        .attr('x1', '0%')\n        .attr('y1', '0%')\n        .attr('x2', '0%')\n        .attr('y2', '100%');\n\n      gradient.append('stop')\n        .attr('offset', '0%')\n        .attr('stop-color', color)\n        .attr('stop-opacity', 0.6);\n\n      gradient.append('stop')\n        .attr('offset', '100%')\n        .attr('stop-color', '#ffffff')\n        .attr('stop-opacity', 0.8);\n\n      const areaPath = area()\n        .x((d) => xScale(d.quarter))\n        .y0(height)\n        .y1((d) => yScale(d.count));\n\n      g.append('path')\n        .datum(lineData)\n        .attr('fill', `url(#${id})`)\n        .attr('fill-opacity', 0.7)\n        .attr('stroke', 'none')\n        .attr('d', areaPath);\n\n      const linePath = line()\n        .x((d) => xScale(d.quarter))\n        .y((d) => yScale(d.count));\n\n      g.append('path')\n        .datum(lineData)\n        .attr('fill', 'none')\n        .attr('stroke', color)\n        .attr('stroke-width', 1.5)\n        .attr('d', linePath);\n    });\n  }, []);\n\n  return (\n    <ChartContainer>\n      <Title>Targets, By Total Number in Press Releases per Quarter in <span style={{ color: \"#156082\", fontWeight: 600 }}>Mosul Iraq</span> </Title>\n      <Legend>\n        {sortedCategories.map((name) => (\n          <LegendItem key={name} color={colorMap[name] || '#ccc'}>\n            {name}\n          </LegendItem>\n        ))}\n      </Legend>\n      <svg ref={svgRef}></svg>\n    </ChartContainer>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}