{"ast":null,"code":"var _jsxFileName = \"/Users/parkerkaufmann/Code/ylj/src/LineChart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { select } from 'd3-selection';\nimport { scalePoint, scaleLinear } from 'd3-scale';\nimport { max } from 'd3-array';\nimport { axisLeft, axisBottom } from 'd3-axis';\nimport { line, area } from 'd3-shape';\nimport { transition } from 'd3-transition';\nimport { easeCubicInOut } from 'd3-ease';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Title = styled.div`\n  color: #000;\n  text-align: center;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  margin: 10px;\n`;\n_c = Title;\nconst ChartContainer = styled.div`\n  width: 570px;\n  color: #333;\n  font-family: 'Bennett Text', Georgia, serif;\n`;\n_c2 = ChartContainer;\nconst Legend = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: .1rem;\n  margin-bottom: 1rem;\n  font-size: 12px;\n`;\n_c3 = Legend;\nconst LegendItem = styled.div`\n  cursor: pointer;\n  padding: 3px;\n  border-radius: 6px;\n  display: flex;\n  align-items: center;\n  &::before {\n    content: '';\n    display: inline-block;\n    width: 20px;\n    height: 2px;\n    margin-right: 6px;\n    background-color: ${props => props.color || '#000'};\n  }\n`;\n_c4 = LegendItem;\nexport default function LineChart(props) {\n  _s();\n  const {\n    data,\n    name,\n    setHoveredQuarter,\n    hoveredQuarter,\n    setHoverCategories,\n    hoverCategories\n  } = props;\n  const svgRef = useRef();\n  const margin = {\n    top: 5,\n    right: 20,\n    bottom: 60,\n    left: 60\n  };\n  const width = 570 - margin.left - margin.right;\n  const height = 500 - margin.top - margin.bottom;\n  const colorMap = {\n    \"Military Personnel, Equipment & Facilities\": \"#DFC5B2\",\n    \"Vehicles\": \"#B7BCD6\",\n    \"Transportation Infrastructure\": \"#ACBCC5\",\n    \"Residential Buildings\": \"#5088A1\",\n    \"Manufacturing, Production, and Construction\": \"#998C84\",\n    \"Oil Infrastructure\": \"#D2D9B6\",\n    \"Media and Telecom Facilities\": \"#9194A8\",\n    \"Terrain\": \"#AEAC8D\",\n    \"Water Infrastructure\": \"#8EBADB\",\n    \"Electrical Infrastructure\": \"#78A898\",\n    \"Financial and Banking Facilities\": \"#98D5D3\"\n  };\n  const sortedCategories = Array.from(new Set(data.flatMap(d => d.categories.map(c => c.name)))).sort((a, b) => {\n    const totalA = data.reduce((sum, d) => {\n      const item = d.categories.find(c => c.name === a);\n      return sum + (item ? item.count : 0);\n    }, 0);\n    const totalB = data.reduce((sum, d) => {\n      const item = d.categories.find(c => c.name === b);\n      return sum + (item ? item.count : 0);\n    }, 0);\n    return totalB - totalA;\n  });\n  const quarters = data.map(d => d.quarter);\n  const xScale = scalePoint().domain(quarters).range([0, width]);\n  const yMax = max(data, d => max(d.categories, c => c.count));\n  const yScale = scaleLinear().domain([0, yMax + 200]).range([height, 0]);\n  useEffect(() => {\n    const filteredCategories = sortedCategories.filter(name => hoverCategories.length === 0 || hoverCategories.includes(name));\n    const svg = select(svgRef.current);\n    let g = svg.select('g.main');\n    if (g.empty()) {\n      g = svg.attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('class', 'main').attr('transform', `translate(${margin.left},${margin.top})`);\n      g.append('g').attr('class', 'y-axis');\n      g.append('g').attr('class', 'x-axis').attr('transform', `translate(0,${height})`);\n      g.append('g').attr('class', 'x-custom-labels').attr('transform', `translate(0,${height})`);\n    }\n    const t = transition().duration(1000).ease(easeCubicInOut);\n    const dataGroup = g.select('.data-group').empty() ? g.append('g').attr('class', 'data-group') : g.select('.data-group');\n    let defs = svg.select('defs');\n    if (defs.empty()) defs = svg.append('defs');\n    g.select('.y-axis').transition(t).call(g => g.select('.domain').attr('stroke', 'transparent')).call(axisLeft(yScale).ticks(5).tickSize(-width).tickPadding(8)).call(g => g.selectAll('line').attr('stroke', '#D9D9D9').attr('stroke-width', 0.5)).call(g => g.selectAll('text').attr('x', -12).attr(\"color\", \"#595959\").attr(\"font-size\", 12));\n    g.select('.x-axis').transition(t).call(axisBottom(xScale)).call(g => g.select('.domain').attr('stroke', 'transparent')).call(g => g.selectAll('line').attr('stroke', '#BCBCBC').attr('stroke-opacity', 0.35)).call(g => g.selectAll('text').attr('color', 'transparent'));\n    const areaPath = area().x(d => xScale(d.quarter)).y0(height).y1(d => yScale(d.count));\n    const linePath = line().x(d => xScale(d.quarter)).y(d => yScale(d.count));\n    const lineDataByCategory = filteredCategories.map(category => {\n      const lineData = data.map(d => {\n        const entry = d.categories.find(c => c.name === category);\n        return {\n          quarter: d.quarter,\n          count: entry ? entry.count : 0\n        };\n      });\n      return {\n        category,\n        lineData,\n        color: colorMap[category] || '#ccc',\n        id: category.replace(/[^a-zA-Z0-9]/g, '-')\n      };\n    });\n    const lineUpdate = dataGroup.selectAll('.line-path').data(lineDataByCategory, d => d.id);\n    lineUpdate.join(enter => enter.append('path').attr('class', 'line-path').attr('fill', 'none').attr('stroke', d => d.color).attr('stroke-width', 1.5).attr('d', d => linePath(d.lineData)).attr('opacity', 0).transition(t).attr('opacity', 1), update => update.transition(t).attr('d', d => linePath(d.lineData)), exit => exit.transition(t).attr('opacity', 0).remove());\n    const areaUpdate = dataGroup.selectAll('.area-path').data(lineDataByCategory, d => d.id);\n    areaUpdate.join(enter => enter.append('path').attr('class', 'area-path').attr('fill', d => `url(#grad-${d.id})`).attr('fill-opacity', 0.7).attr('stroke', 'none').attr('d', d => areaPath(d.lineData)).attr('opacity', 0).transition(t).attr('opacity', 1), update => update.transition(t).attr('d', d => areaPath(d.lineData)), exit => exit.transition(t).attr('opacity', 0).remove());\n    lineDataByCategory.forEach(({\n      id,\n      color\n    }) => {\n      let gradient = defs.select(`#grad-${id}`);\n      if (gradient.empty()) {\n        gradient = defs.append('linearGradient').attr('id', `grad-${id}`).attr('x1', '0%').attr('y1', '0%').attr('x2', '0%').attr('y2', '100%');\n        gradient.append('stop').attr('offset', '0%').attr('stop-color', color).attr('stop-opacity', 0.6);\n        gradient.append('stop').attr('offset', '100%').attr('stop-color', '#ffffff').attr('stop-opacity', 0.8);\n      }\n    });\n  }, [data, hoveredQuarter, hoverCategories]);\n  const handleLegendItemClick = value => {\n    const tempArr = [...hoverCategories];\n    if (tempArr.includes(value)) {\n      setHoverCategories(tempArr.filter(v => v !== value));\n    } else {\n      tempArr.push(value);\n      setHoverCategories(tempArr);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ChartContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: [\"Targets, By Total Number in Press Releases per Quarter in\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          color: \"#156082\",\n          fontWeight: 600\n        },\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Legend, {\n      children: sortedCategories.map(name => /*#__PURE__*/_jsxDEV(LegendItem, {\n        color: colorMap[name] || '#ccc',\n        onClick: () => handleLegendItemClick(name),\n        style: {\n          border: hoverCategories.includes(name) ? `1px solid ${colorMap[name]}` : '1px solid #ffffff'\n        },\n        children: name\n      }, name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n}\n_s(LineChart, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n_c5 = LineChart;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Title\");\n$RefreshReg$(_c2, \"ChartContainer\");\n$RefreshReg$(_c3, \"Legend\");\n$RefreshReg$(_c4, \"LegendItem\");\n$RefreshReg$(_c5, \"LineChart\");","map":{"version":3,"names":["React","useEffect","useRef","useState","select","scalePoint","scaleLinear","max","axisLeft","axisBottom","line","area","transition","easeCubicInOut","styled","jsxDEV","_jsxDEV","Title","div","_c","ChartContainer","_c2","Legend","_c3","LegendItem","props","color","_c4","LineChart","_s","data","name","setHoveredQuarter","hoveredQuarter","setHoverCategories","hoverCategories","svgRef","margin","top","right","bottom","left","width","height","colorMap","sortedCategories","Array","from","Set","flatMap","d","categories","map","c","sort","a","b","totalA","reduce","sum","item","find","count","totalB","quarters","quarter","xScale","domain","range","yMax","yScale","filteredCategories","filter","length","includes","svg","current","g","empty","attr","append","t","duration","ease","dataGroup","defs","call","ticks","tickSize","tickPadding","selectAll","areaPath","x","y0","y1","linePath","y","lineDataByCategory","category","lineData","entry","id","replace","lineUpdate","join","enter","update","exit","remove","areaUpdate","forEach","gradient","handleLegendItemClick","value","tempArr","v","push","children","style","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","onClick","border","ref","_c5","$RefreshReg$"],"sources":["/Users/parkerkaufmann/Code/ylj/src/LineChart.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { select } from 'd3-selection';\nimport { scalePoint, scaleLinear } from 'd3-scale';\nimport { max } from 'd3-array';\nimport { axisLeft, axisBottom } from 'd3-axis';\nimport { line, area } from 'd3-shape';\nimport { transition } from 'd3-transition';\nimport { easeCubicInOut } from 'd3-ease';\nimport styled from 'styled-components';\n\nconst Title = styled.div`\n  color: #000;\n  text-align: center;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  margin: 10px;\n`;\n\nconst ChartContainer = styled.div`\n  width: 570px;\n  color: #333;\n  font-family: 'Bennett Text', Georgia, serif;\n`;\n\nconst Legend = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: .1rem;\n  margin-bottom: 1rem;\n  font-size: 12px;\n`;\n\nconst LegendItem = styled.div`\n  cursor: pointer;\n  padding: 3px;\n  border-radius: 6px;\n  display: flex;\n  align-items: center;\n  &::before {\n    content: '';\n    display: inline-block;\n    width: 20px;\n    height: 2px;\n    margin-right: 6px;\n    background-color: ${(props) => props.color || '#000'};\n  }\n`;\n\nexport default function LineChart(props) {\n  const { data, name, setHoveredQuarter, hoveredQuarter, setHoverCategories, hoverCategories } = props;\n  const svgRef = useRef();\n  const margin = { top: 5, right: 20, bottom: 60, left: 60 };\n  const width = 570 - margin.left - margin.right;\n  const height = 500 - margin.top - margin.bottom;\n\n  const colorMap = {\n    \"Military Personnel, Equipment & Facilities\": \"#DFC5B2\",\n    \"Vehicles\": \"#B7BCD6\",\n    \"Transportation Infrastructure\": \"#ACBCC5\",\n    \"Residential Buildings\": \"#5088A1\",\n    \"Manufacturing, Production, and Construction\": \"#998C84\",\n    \"Oil Infrastructure\": \"#D2D9B6\",\n    \"Media and Telecom Facilities\": \"#9194A8\",\n    \"Terrain\": \"#AEAC8D\",\n    \"Water Infrastructure\": \"#8EBADB\",\n    \"Electrical Infrastructure\": \"#78A898\",\n    \"Financial and Banking Facilities\": \"#98D5D3\"\n  };\n\n  const sortedCategories = Array.from(\n    new Set(data.flatMap(d => d.categories.map(c => c.name)))\n  ).sort((a, b) => {\n    const totalA = data.reduce((sum, d) => {\n      const item = d.categories.find(c => c.name === a);\n      return sum + (item ? item.count : 0);\n    }, 0);\n    const totalB = data.reduce((sum, d) => {\n      const item = d.categories.find(c => c.name === b);\n      return sum + (item ? item.count : 0);\n    }, 0);\n    return totalB - totalA;\n  });\n\n  const quarters = data.map((d) => d.quarter);\n  const xScale = scalePoint().domain(quarters).range([0, width]);\n  const yMax = max(data, (d) => max(d.categories, (c) => c.count));\n  const yScale = scaleLinear().domain([0, yMax + 200]).range([height, 0]);\n\n  useEffect(() => {\n    const filteredCategories = sortedCategories.filter(\n      name => hoverCategories.length === 0 || hoverCategories.includes(name)\n    );\n\n    const svg = select(svgRef.current);\n    let g = svg.select('g.main');\n    if (g.empty()) {\n      g = svg\n        .attr('width', width + margin.left + margin.right)\n        .attr('height', height + margin.top + margin.bottom)\n        .append('g')\n        .attr('class', 'main')\n        .attr('transform', `translate(${margin.left},${margin.top})`);\n\n      g.append('g').attr('class', 'y-axis');\n      g.append('g').attr('class', 'x-axis').attr('transform', `translate(0,${height})`);\n      g.append('g').attr('class', 'x-custom-labels').attr('transform', `translate(0,${height})`);\n    }\n\n    const t = transition().duration(1000).ease(easeCubicInOut);\n    const dataGroup = g.select('.data-group').empty()\n      ? g.append('g').attr('class', 'data-group')\n      : g.select('.data-group');\n\n    let defs = svg.select('defs');\n    if (defs.empty()) defs = svg.append('defs');\n\n    g.select('.y-axis')\n      .transition(t)\n      .call(g => g.select('.domain').attr('stroke', 'transparent'))\n      .call(axisLeft(yScale).ticks(5).tickSize(-width).tickPadding(8))\n      .call(g => g.selectAll('line').attr('stroke', '#D9D9D9').attr('stroke-width', 0.5))\n      .call(g => g.selectAll('text').attr('x', -12).attr(\"color\", \"#595959\").attr(\"font-size\", 12));\n\n    g.select('.x-axis')\n      .transition(t)\n      .call(axisBottom(xScale))\n      .call(g => g.select('.domain').attr('stroke', 'transparent'))\n      .call(g => g.selectAll('line').attr('stroke', '#BCBCBC').attr('stroke-opacity', 0.35))\n      .call(g => g.selectAll('text').attr('color', 'transparent'));\n\n    const areaPath = area().x(d => xScale(d.quarter)).y0(height).y1(d => yScale(d.count));\n    const linePath = line().x(d => xScale(d.quarter)).y(d => yScale(d.count));\n\n    const lineDataByCategory = filteredCategories.map((category) => {\n      const lineData = data.map((d) => {\n        const entry = d.categories.find((c) => c.name === category);\n        return { quarter: d.quarter, count: entry ? entry.count : 0 };\n      });\n      return {\n        category,\n        lineData,\n        color: colorMap[category] || '#ccc',\n        id: category.replace(/[^a-zA-Z0-9]/g, '-')\n      };\n    });\n\n    const lineUpdate = dataGroup.selectAll('.line-path')\n      .data(lineDataByCategory, d => d.id);\n\n    lineUpdate\n      .join(\n        enter => enter.append('path')\n          .attr('class', 'line-path')\n          .attr('fill', 'none')\n          .attr('stroke', d => d.color)\n          .attr('stroke-width', 1.5)\n          .attr('d', d => linePath(d.lineData))\n          .attr('opacity', 0)\n          .transition(t)\n          .attr('opacity', 1),\n        update => update.transition(t).attr('d', d => linePath(d.lineData)),\n        exit => exit.transition(t).attr('opacity', 0).remove()\n      );\n\n    const areaUpdate = dataGroup.selectAll('.area-path')\n      .data(lineDataByCategory, d => d.id);\n\n    areaUpdate\n      .join(\n        enter => enter.append('path')\n          .attr('class', 'area-path')\n          .attr('fill', d => `url(#grad-${d.id})`)\n          .attr('fill-opacity', 0.7)\n          .attr('stroke', 'none')\n          .attr('d', d => areaPath(d.lineData))\n          .attr('opacity', 0)\n          .transition(t)\n          .attr('opacity', 1),\n        update => update.transition(t).attr('d', d => areaPath(d.lineData)),\n        exit => exit.transition(t).attr('opacity', 0).remove()\n      );\n\n    lineDataByCategory.forEach(({ id, color }) => {\n      let gradient = defs.select(`#grad-${id}`);\n      if (gradient.empty()) {\n        gradient = defs.append('linearGradient')\n          .attr('id', `grad-${id}`)\n          .attr('x1', '0%')\n          .attr('y1', '0%')\n          .attr('x2', '0%')\n          .attr('y2', '100%');\n        gradient.append('stop').attr('offset', '0%').attr('stop-color', color).attr('stop-opacity', 0.6);\n        gradient.append('stop').attr('offset', '100%').attr('stop-color', '#ffffff').attr('stop-opacity', 0.8);\n      }\n    });\n  }, [data, hoveredQuarter, hoverCategories]);\n\n  const handleLegendItemClick = (value) => {\n    const tempArr = [...hoverCategories];\n    if (tempArr.includes(value)) {\n      setHoverCategories(tempArr.filter((v) => v !== value));\n    } else {\n      tempArr.push(value);\n      setHoverCategories(tempArr);\n    }\n  };\n\n  return (\n    <ChartContainer>\n      <Title>\n        Targets, By Total Number in Press Releases per Quarter in{' '}\n        <span style={{ color: \"#156082\", fontWeight: 600 }}>{name}</span>\n      </Title>\n      <Legend>\n        {sortedCategories.map((name) => (\n          <LegendItem\n            key={name}\n            color={colorMap[name] || '#ccc'}\n            onClick={() => handleLegendItemClick(name)}\n            style={{\n              border: hoverCategories.includes(name)\n                ? `1px solid ${colorMap[name]}`\n                : '1px solid #ffffff'\n            }}\n          >\n            {name}\n          </LegendItem>\n        ))}\n      </Legend>\n      <svg ref={svgRef}></svg>\n    </ChartContainer>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}